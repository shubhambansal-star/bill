{"version":3,"sources":["@gull/components/MegaMenu.jsx","app/GullLayout/Layout1/Layout1Sidenav.jsx","app/GullLayout/Layout1/Layout1Header.jsx","app/GullLayout/Layout1/Layout1.jsx"],"names":["MegaMenu","className","to","href","Layout1Sidenav","windowListener","state","selectedItem","navOpen","secondaryNavOpen","onMainItemMouseEnter","item","type","setSelected","openSecSidenav","closeSecSidenav","onMainItemMouseLeave","setState","removeSelected","props","setLayoutSettings","settings","merge","layout1Settings","leftSidebar","other","isMobile","open","closeSidenav","openSidenav","this","window","innerWidth","addEventListener","target","removeEventListener","classList","navigations","map","i","active","onMouseEnter","onMouseLeave","key","path","icon","name","sub","menu","Component","withRouter","connect","setDefaultSettings","PropTypes","func","isRequired","logoutUser","user","layout","Layout1Header","shorcutMenuList","link","text","notificationList","title","description","time","color","status","showSearchBox","handleMenuClick","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","src","alt","onClick","style","margin","data-fullscreen","Dropdown","Toggle","as","id","data-toggle","aria-haspopup","aria-expanded","Menu","Layout1","handleSearchBoxClose","prevProps","location","scrollTo","routes","fallback","Loading","renderRoutes","footer","show","Footer","GullSearch","handleClose"],"mappings":"kHAAA,4BAwHeA,IArHE,WACf,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,SAAd,aACY,6BADZ,YAGA,wIAIA,uBAAGA,UAAU,QAAb,mHAIA,4BAAQA,UAAU,8CAAlB,eAIF,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,+DAAb,YAGA,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,aADf,SAGA,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,cADf,YAGA,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,WADf,SAGA,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,gCADf,UAGA,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,mBADf,aAGA,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,gBADf,cAKJ,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,+DAAb,cAGA,wBAAIA,UAAU,SACZ,4BACE,kBAAC,IAAD,CAAMC,GAAG,IAAIC,KAAK,kBAAlB,cAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,eAAlB,WAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,gBAAlB,YAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,eAAlB,WAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,iBAAlB,cAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,cAAlB,UAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,gBAAlB,YAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,eAAlB,WAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,mBAAlB,eAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,eAAlB,WAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,mBAAlB,YAIF,4BACE,kBAAC,IAAD,CAAMD,GAAG,IAAIC,KAAK,aAAlB,e,wNC3FRC,E,4MACJC,eAAiB,K,EAEjBC,MAAQ,CACNC,aAAc,KACdC,SAAS,EACTC,kBAAkB,G,EAGpBC,qBAAuB,SAACC,GACJ,aAAdA,EAAKC,MACP,EAAKC,YAAYF,GACjB,EAAKG,mBAEL,EAAKD,YAAYF,GACjB,EAAKI,oB,EAITC,qBAAuB,a,EAIvBH,YAAc,SAACN,GACb,EAAKU,SAAS,CAAEV,kB,EAGlBW,eAAiB,WACf,EAAKD,SAAS,CAAEV,aAAc,Q,EAGhCO,eAAiB,WACf,MAAsC,EAAKK,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SAEzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfC,YAAa,CACXf,kBAAkB,Q,EAO5BM,gBAAkB,WAChB,MAAsC,EAAKI,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACrBI,EAAQ,GAERC,gBACFD,EAAME,MAAO,GAGfP,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfC,YAAY,2BACPC,GADM,IAEThB,kBAAkB,S,EAO5BmB,aAAe,WAEb,MAAsC,EAAKT,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfC,YAAa,CACXG,MAAM,EACNlB,kBAAkB,Q,EAO5BoB,YAAc,WACZ,MAAsC,EAAKV,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfC,YAAa,CACXG,MAAM,Q,uDAOhB,WAAqB,IAAD,OACc,OAA5BG,KAAKxB,MAAMC,cAAuBuB,KAAKf,kBAEvCgB,SACEA,OAAOC,WAAa,KACtBF,KAAKF,eAELE,KAAKD,eAGTC,KAAKzB,eAAiB0B,OAAOE,iBAAiB,UAAU,YAAgB,EAAbC,OACrDH,OAAOC,WAAa,KACtB,EAAKJ,eAEL,EAAKC,mB,kCAKX,WACMC,KAAKzB,gBACP0B,OAAOI,oBAAoB,SAAUL,KAAKzB,kB,oBAI9C,WAAU,IAAD,OACDgB,EAAaS,KAAKX,MAAlBE,SAEN,OACE,yBAAKpB,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAWmC,YAAU,CACnB,qCAAqC,EACrCT,KAAMN,EAASE,gBAAgBC,YAAYG,QAI7C,wBAAI1B,UAAU,mBACXoC,IAAYC,KAAI,SAAC3B,EAAM4B,GAAP,OACf,wBACEtC,UAAWmC,YAAU,CACnB,YAAY,EACZI,OAAQ,EAAKlC,MAAMC,eAAiBI,IAEtC8B,aAAc,WACZ,EAAK/B,qBAAqBC,IAE5B+B,aAAc,EAAK1B,qBACnB2B,IAAKJ,GAEJ5B,EAAKiC,MAAsB,YAAdjC,EAAKC,MACjB,kBAAC,IAAD,CAASX,UAAU,gBAAgBC,GAAIS,EAAKiC,MAC1C,uBAAG3C,UAAS,mBAAcU,EAAKkC,QAC/B,0BAAM5C,UAAU,YAAYU,EAAKmC,OAGpCnC,EAAKiC,MAAsB,YAAdjC,EAAKC,MACjB,uBAAGX,UAAU,gBAAgBE,KAAMQ,EAAKiC,MACtC,uBAAG3C,UAAS,mBAAcU,EAAKkC,QAC/B,0BAAM5C,UAAU,YAAYU,EAAKmC,QAGnCnC,EAAKiC,MACL,yBAAK3C,UAAU,iBACb,uBAAGA,UAAS,mBAAcU,EAAKkC,QAC/B,0BAAM5C,UAAU,YAAYU,EAAKmC,OAGrC,yBAAK7C,UAAU,mBAMvB,kBAAC,IAAD,CACEA,UAAWmC,YAAU,CACnB,+CAA+C,EAC/CT,KAAMN,EAASE,gBAAgBC,YAAYf,oBAG5CqB,KAAKxB,MAAMC,cAAgBuB,KAAKxB,MAAMC,aAAawC,KAClD,kBAAC,IAAD,CACEC,KAAMlB,KAAKxB,MAAMC,aAAawC,IAC9BhC,gBAAiBe,KAAKf,kBAG1B,gCAEF,yBACE0B,aAAcX,KAAKf,gBACnBd,UAAWmC,YAAU,CACnB,mBAAmB,EACnBT,KAAMN,EAASE,gBAAgBC,YAAYf,0B,GAzL1BwC,aAiNdC,cACbC,aATsB,SAAC7C,GAAD,MAAY,CAClC8C,mBAAoBC,IAAUC,KAAKC,WACnCnC,kBAAmBiC,IAAUC,KAAKC,WAClCC,WAAYH,IAAUC,KAAKC,WAC3BE,KAAMnD,EAAMmD,KACZpC,SAAUf,EAAMoD,OAAOrC,YAIE,CACvBD,sBACAgC,uBACAI,gBAHFL,CAIG/C,I,oBCrNCuD,G,oNACJrD,MAAQ,CACNsD,gBAAiB,CACf,CACEf,KAAM,WACNgB,KAAM,IACNC,KAAM,QAER,CACEjB,KAAM,YACNgB,KAAM,IACNC,KAAM,WAER,CACEjB,KAAM,SACNgB,KAAM,IACNC,KAAM,QAER,CACEjB,KAAM,8BACNgB,KAAM,IACNC,KAAM,QAER,CACEjB,KAAM,iBACNgB,KAAM,IACNC,KAAM,YAER,CACEjB,KAAM,cACNgB,KAAM,IACNC,KAAM,YAGVC,iBAAkB,CAChB,CACElB,KAAM,oBACNmB,MAAO,cACPC,YAAa,4BACbC,KAAM,2BACNC,MAAO,UACPC,OAAQ,OAEV,CACEvB,KAAM,cACNmB,MAAO,qBACPC,YAAa,wBACbC,KAAM,2BACNC,MAAO,UACPC,OAAQ,OAEV,CACEvB,KAAM,cACNmB,MAAO,uBACPC,YAAa,wBACbC,KAAM,2BACNC,MAAO,SACPC,OAAQ,KAEV,CACEvB,KAAM,eACNmB,MAAO,aACPC,YAAa,+BACbC,KAAM,2BACNC,MAAO,UACPC,OAAQ,MAGZC,eAAe,G,EAGjBC,gBAAkB,WAChB,MAAsC,EAAKnD,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfC,YAAa,CACXG,OAAMN,EAASE,gBAAgBC,YAAYf,mBAEtCY,EAASE,gBAAgBC,YAAYG,KAC1ClB,kBAAkB,Q,EAO5B8D,iBAAmB,WACbC,SAASC,oBACND,SAASE,WACTF,SAASG,iBADYH,SAASI,gBAAgBC,sB,EAKvDC,oBAAsB,WACpB,MAAsC,EAAK3D,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfwD,UAAW,CACTpD,MAAM,Q,4CAOhB,WACE,MAA4CG,KAAKxB,MAAjD,EAAMsD,gBAAN,EAAuBG,iBAEvB,OACE,yBAAK9D,UAAU,eACb,yBAAKA,UAAU,QACb,yBAAK+E,IAAI,0BAA0BC,IAAI,MAGzC,yBAAKhF,UAAU,cAAciF,QAASpD,KAAKwC,iBACzC,8BACA,8BACA,+BA0BF,yBAAKa,MAAO,CAAEC,OAAQ,UAEtB,yBAAKnF,UAAU,qBACb,uBACEA,UAAU,qDACVoF,mBAAA,EACAH,QAASpD,KAAKyC,mBA0DhB,yBAAKtE,UAAU,iBACb,kBAACqF,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CACEC,GAAG,OACHvF,UAAU,gCAEV,yBACE+E,IAAI,6BACJS,GAAG,eACHR,IAAI,GACJS,cAAY,WACZC,gBAAc,OACdC,gBAAc,WAGlB,kBAACN,EAAA,EAASO,KAAV,KACE,yBAAK5F,UAAU,mBACb,uBAAGA,UAAU,qBADf,oBAGA,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,oBAGA,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,mBAGA,kBAAC,IAAD,CACEC,GAAG,IACHD,UAAU,+BACViF,QAASpD,KAAKX,MAAMqC,YAHtB,qB,GA1OYP,cA0QbC,cACbC,aATsB,SAAC7C,GAAD,MAAY,CAClC8C,mBAAoBC,IAAUC,KAAKC,WACnCnC,kBAAmBiC,IAAUC,KAAKC,WAClCC,WAAYH,IAAUC,KAAKC,WAC3BE,KAAMnD,EAAMmD,KACZpC,SAAUf,EAAMoD,OAAOrC,YAIE,CACvBD,sBACAgC,uBACAI,gBAHFL,CAIGQ,I,kBClRCmC,E,4MAMJxF,MAAQ,G,EAERyF,qBAAuB,WACrB,MAAsC,EAAK5E,MAArCC,EAAN,EAAMA,kBAAmBC,EAAzB,EAAyBA,SACzBD,EACEE,gBAAM,GAAID,EAAU,CAClBE,gBAAiB,CACfwD,UAAW,CACTpD,MAAM,Q,wDAbhB,SAAmBqE,GACblE,KAAKX,MAAM8E,WAAaD,EAAUC,UACpClE,OAAOmE,SAAS,EAAG,K,oBAkBvB,WACE,MAA2BpE,KAAKX,MAA1BE,EAAN,EAAMA,SAAU8E,EAAhB,EAAgBA,OAEhB,OACE,6BACE,yBAAKlG,UAAS,uCACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MAGA,yBACEA,UAAWmC,YAAU,CACnB,wCAAwC,EACxC,eAAgBf,EAASE,gBAAgBC,YAAYG,QAGvD,kBAAC,WAAD,CAAUyE,SAAU,kBAACC,EAAA,EAAD,OAClB,yBAAKpG,UAAU,gBAAgBqG,YAAaH,KAE7C9E,EAASkF,OAAOC,MAAQ,kBAACC,EAAA,EAAD,QAG7B,kBAACC,EAAA,EAAD,CACE/E,KAAMN,EAASE,gBAAgBwD,UAAUpD,KACzCgF,YAAa7E,KAAKiE,4B,GA7CN9C,aAyDPC,sBACbC,aANsB,SAAC7C,GAAD,MAAY,CAClCc,kBAAmBiC,IAAUC,KAAKC,WAClClC,SAAUf,EAAMoD,OAAOrC,YAIE,CAAED,uBAA3B+B,CAAgD2C","file":"static/js/83.5c650ecf.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst MegaMenu = () => {\n  return (\n    <Fragment>\n      <div className=\"row m-0\">\n        <div className=\"col-md-4 p-4 bg-img\">\n          <h2 className=\"title\">\n            Mega Menu <br /> Sidebar\n          </h2>\n          <p>\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Asperiores\n            natus laboriosam fugit, consequatur.\n          </p>\n          <p className=\"mb-4\">\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n            Exercitationem odio amet eos dolore suscipit placeat.\n          </p>\n          <button className=\"btn btn-lg btn-rounded btn-outline-warning\">\n            Learn More\n          </button>\n        </div>\n        <div className=\"col-md-4 p-4\">\n          <p className=\"text-primary text--cap border-bottom-primary d-inline-block\">\n            Features\n          </p>\n          <div className=\"menu-icon-grid w-auto p-0\">\n            <Link to=\"/\">\n              <i className=\"i-Shop-4\"></i> Home\n            </Link>\n            <Link to=\"/\">\n              <i className=\"i-Library\"></i> UI Kits\n            </Link>\n            <Link to=\"/\">\n              <i className=\"i-Drop\"></i> Apps\n            </Link>\n            <Link to=\"/\">\n              <i className=\"i-File-Clipboard-File--Text\"></i> Forms\n            </Link>\n            <Link to=\"/\">\n              <i className=\"i-Checked-User\"></i> Sessions\n            </Link>\n            <Link to=\"/\">\n              <i className=\"i-Ambulance\"></i> Support\n            </Link>\n          </div>\n        </div>\n        <div className=\"col-md-4 p-4\">\n          <p className=\"text-primary text--cap border-bottom-primary d-inline-block\">\n            Components\n          </p>\n          <ul className=\"links\">\n            <li>\n              <Link to=\"/\" href=\"accordion.html\">\n                Accordion\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"alerts.html\">\n                Alerts\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"buttons.html\">\n                Buttons\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"badges.html\">\n                Badges\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"carousel.html\">\n                Carousels\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"lists.html\">\n                Lists\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"popover.html\">\n                Popover\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"tables.html\">\n                Tables\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"datatables.html\">\n                Datatables\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"modals.html\">\n                Modals\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"nouislider.html\">\n                Sliders\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" href=\"tabs.html\">\n                Tabs\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MegaMenu;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigations } from \"../../navigations\";\nimport { merge } from \"lodash\";\nimport { classList, isMobile } from \"@utils\";\nimport Srcollbar from \"react-perfect-scrollbar\";\nimport { DropDownMenu } from \"@gull\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings,\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport ScrollBar from \"react-perfect-scrollbar\";\n\nclass Layout1Sidenav extends Component {\n  windowListener = null;\n\n  state = {\n    selectedItem: null,\n    navOpen: true,\n    secondaryNavOpen: false,\n  };\n\n  onMainItemMouseEnter = (item) => {\n    if (item.type === \"dropDown\") {\n      this.setSelected(item);\n      this.openSecSidenav();\n    } else {\n      this.setSelected(item);\n      this.closeSecSidenav();\n    }\n  };\n\n  onMainItemMouseLeave = () => {\n    // this.closeSecSidenav();\n  };\n\n  setSelected = (selectedItem) => {\n    this.setState({ selectedItem });\n  };\n\n  removeSelected = () => {\n    this.setState({ selectedItem: null });\n  };\n\n  openSecSidenav = () => {\n    let { setLayoutSettings, settings } = this.props;\n\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            secondaryNavOpen: true,\n          },\n        },\n      })\n    );\n  };\n\n  closeSecSidenav = () => {\n    let { setLayoutSettings, settings } = this.props;\n    let other = {};\n\n    if (isMobile()) {\n      other.open = false;\n    }\n\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            ...other,\n            secondaryNavOpen: false,\n          },\n        },\n      })\n    );\n  };\n\n  closeSidenav = () => {\n\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: false,\n            secondaryNavOpen: false,\n          },\n        },\n      })\n    );\n  };\n\n  openSidenav = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: true,\n          },\n        },\n      })\n    );\n  };\n\n  componentDidMount() {\n    if (this.state.selectedItem === null) this.closeSecSidenav();\n\n    if (window)\n      if (window.innerWidth < 1200) {\n        this.closeSidenav();\n      } else {\n        this.openSidenav();\n      }\n\n    this.windowListener = window.addEventListener(\"resize\", ({ target }) => {\n      if (window.innerWidth < 1200) {\n        this.closeSidenav();\n      } else {\n        this.openSidenav();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.windowListener) {\n      window.removeEventListener(\"resize\", this.windowListener);\n    }\n  }\n\n  render() {\n    let { settings } = this.props;\n\n    return (\n      <div className=\"side-content-wrap\">\n        <Srcollbar\n          className={classList({\n            \"sidebar-left o-hidden rtl-ps-none\": true,\n            open: settings.layout1Settings.leftSidebar.open,\n          })}\n          // id=\"mainsidenav\"\n        >\n          <ul className=\"navigation-left\">\n            {navigations.map((item, i) => (\n              <li\n                className={classList({\n                  \"nav-item\": true,\n                  active: this.state.selectedItem === item,\n                })}\n                onMouseEnter={() => {\n                  this.onMainItemMouseEnter(item);\n                }}\n                onMouseLeave={this.onMainItemMouseLeave}\n                key={i}\n              >\n                {item.path && item.type !== \"extLink\" && (\n                  <NavLink className=\"nav-item-hold\" to={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </NavLink>\n                )}\n                {item.path && item.type === \"extLink\" && (\n                  <a className=\"nav-item-hold\" href={item.path}>\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </a>\n                )}\n                {!item.path && (\n                  <div className=\"nav-item-hold\">\n                    <i className={`nav-icon ${item.icon}`}></i>\n                    <span className=\"nav-text\">{item.name}</span>\n                  </div>\n                )}\n                <div className=\"triangle\"></div>\n              </li>\n            ))}\n          </ul>\n        </Srcollbar>\n\n        <ScrollBar\n          className={classList({\n            \"sidebar-left-secondary o-hidden rtl-ps-none\": true,\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen,\n          })}\n        >\n          {this.state.selectedItem && this.state.selectedItem.sub && (\n            <DropDownMenu\n              menu={this.state.selectedItem.sub}\n              closeSecSidenav={this.closeSecSidenav}\n            ></DropDownMenu>\n          )}\n          <span></span>\n        </ScrollBar>\n        <div\n          onMouseEnter={this.closeSecSidenav}\n          className={classList({\n            \"sidebar-overlay\": true,\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen,\n          })}\n        ></div>\n      </div>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n    setDefaultSettings,\n    logoutUser,\n  })(Layout1Sidenav)\n);\n","import React, { Component } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\nimport { getTimeDifference } from \"@utils\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings,\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { merge } from \"lodash\";\nimport MegaMenu from \"@gull/components/MegaMenu\";\n\nclass Layout1Header extends Component {\n  state = {\n    shorcutMenuList: [\n      {\n        icon: \"i-Shop-4\",\n        link: \"#\",\n        text: \"Home\",\n      },\n      {\n        icon: \"i-Library\",\n        link: \"#\",\n        text: \"Ui Kits\",\n      },\n      {\n        icon: \"i-Drop\",\n        link: \"#\",\n        text: \"Apps\",\n      },\n      {\n        icon: \"i-File-Clipboard-File--Text\",\n        link: \"#\",\n        text: \"Form\",\n      },\n      {\n        icon: \"i-Checked-User\",\n        link: \"#\",\n        text: \"Sessions\",\n      },\n      {\n        icon: \"i-Ambulance\",\n        link: \"#\",\n        text: \"Support\",\n      },\n    ],\n    notificationList: [\n      {\n        icon: \"i-Speach-Bubble-6\",\n        title: \"New message\",\n        description: \"James: Hey! are you busy?\",\n        time: \"2019-10-30T02:10:18.931Z\",\n        color: \"primary\",\n        status: \"New\",\n      },\n      {\n        icon: \"i-Receipt-3\",\n        title: \"New order received\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"New\",\n      },\n      {\n        icon: \"i-Empty-Box\",\n        title: \"Product out of stock\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-05-10T02:10:18.931Z\",\n        color: \"danger\",\n        status: \"3\",\n      },\n      {\n        icon: \"i-Data-Power\",\n        title: \"Server up!\",\n        description: \"Server rebooted successfully\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"3\",\n      },\n    ],\n    showSearchBox: false,\n  };\n\n  handleMenuClick = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: {\n            open: settings.layout1Settings.leftSidebar.secondaryNavOpen\n              ? true\n              : !settings.layout1Settings.leftSidebar.open,\n            secondaryNavOpen: false,\n          },\n        },\n      })\n    );\n  };\n\n  toggleFullScreen = () => {\n    if (document.fullscreenEnabled) {\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\n      else document.exitFullscreen();\n    }\n  };\n\n  handleSearchBoxOpen = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          searchBox: {\n            open: true,\n          },\n        },\n      })\n    );\n  };\n\n  render() {\n    let { shorcutMenuList, notificationList } = this.state;\n\n    return (\n      <div className=\"main-header\">\n        <div className=\"logo\">\n          <img src=\"/assets/images/logo.png\" alt=\"\" />\n        </div>\n\n        <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n\n        {/* <div className=\"d-none d-lg-flex align-items-center\">\n          <Dropdown className=\"me-3\">\n            <Dropdown.Toggle as=\"div\" className=\"toggle-hidden cursor-pointer\">\n              Mega Menu\n            </Dropdown.Toggle>\n\n            <div className=\"mega-menu\">\n              <Dropdown.Menu>\n                <MegaMenu></MegaMenu>\n              </Dropdown.Menu>\n            </div>\n          </Dropdown>\n\n          <div className=\"search-bar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              onFocus={this.handleSearchBoxOpen}\n            />\n            <i className=\"search-icon text-muted i-Magnifi-Glass1\"></i>\n          </div>\n        </div> */}\n\n        <div style={{ margin: \"auto\" }}></div>\n\n        <div className=\"header-part-right\">\n          <i\n            className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\n            data-fullscreen\n            onClick={this.toggleFullScreen}\n          ></i>\n\n          {/* <Dropdown>\n            <Dropdown.Toggle as=\"span\" className=\"toggle-hidden\">\n              <i\n                className=\"i-Safe-Box text-muted header-icon\"\n                role=\"button\"\n              ></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <div className=\"menu-icon-grid\">\n                {shorcutMenuList.map((menu) => (\n                  <Link key={menu.text} to={menu.link}>\n                    <i className={menu.icon}></i> {menu.text}\n                  </Link>\n                ))}\n              </div>\n            </Dropdown.Menu>\n          </Dropdown> */}\n\n          {/* <Dropdown>\n            <Dropdown.Toggle\n              as=\"div\"\n              id=\"dropdownNotification\"\n              className=\"badge-top-container toggle-hidden\"\n            >\n              <span className=\"badge bg-primary cursor-pointer\">3</span>\n              <i className=\"i-Bell text-muted header-icon\"></i>\n            </Dropdown.Toggle>\n            <Dropdown.Menu className=\"notification-dropdown\">\n              {notificationList.map((note, index) => (\n                <div key={index} className=\"dropdown-item d-flex\">\n                  <div className=\"notification-icon\">\n                    <i className={`${note.icon} text-${note.color} mr-1`}></i>\n                  </div>\n                  <div className=\"notification-details flex-grow-1\">\n                    <p className=\"m-0 d-flex align-items-center\">\n                      <span>{note.title}</span>\n                      <span\n                        className={`badge rounded-pill bg-${note.color} ms-1 me-1`}\n                      >\n                        {note.status}\n                      </span>\n                      <span className=\"flex-grow-1\"></span>\n                      <span className=\"text-small text-muted ms-auto\">\n                        {getTimeDifference(new Date(note.time))} ago\n                      </span>\n                    </p>\n                    <p className=\"text-small text-muted m-0\">\n                      {note.description}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown> */}\n\n          <div className=\"user col px-3\">\n            <Dropdown>\n              <Dropdown.Toggle\n                as=\"span\"\n                className=\"toggle-hidden cursor-pointer\"\n              >\n                <img\n                  src=\"/assets/images/faces/1.jpg\"\n                  id=\"userDropdown\"\n                  alt=\"\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <div className=\"dropdown-header\">\n                  <i className=\"i-Lock-User me-1\"></i> Timothy Carlson\n                </div>\n                <Link to=\"/\" className=\"dropdown-item cursor-pointer\">\n                  Account settings\n                </Link>\n                <Link to=\"/\" className=\"dropdown-item cursor-pointer\">\n                  Billing history\n                </Link>\n                <Link\n                  to=\"/\"\n                  className=\"dropdown-item cursor-pointer\"\n                  onClick={this.props.logoutUser}\n                >\n                  Sign out\n                </Link>\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLayout1Header.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n    setDefaultSettings,\n    logoutUser,\n  })(Layout1Header)\n);\n","import React, { Component, Suspense } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\n\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedComponents/Footer\";\nimport Layout1Header from \"./Layout1Header\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { classList } from \"@utils\";\nimport GullSearch from \"@gull/components/GullSearch\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { merge } from \"lodash\";\nimport Loading from \"@gull/components/GullLoadable/Loading\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Layout1 extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n  state = {};\n\n  handleSearchBoxClose = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout1Settings: {\n          searchBox: {\n            open: false,\n          },\n        },\n      })\n    );\n  };\n\n  render() {\n    let { settings, routes } = this.props;\n\n    return (\n      <div>\n        <div className={`app-admin-wrap layout-sidebar-large`}>\n          <Layout1Header></Layout1Header>\n          <Layout1Sidenav />\n          {/* sidebar */}\n\n          <div\n            className={classList({\n              \"main-content-wrap d-flex flex-column\": true,\n              \"sidenav-open\": settings.layout1Settings.leftSidebar.open,\n            })}\n          >\n            <Suspense fallback={<Loading />}>\n              <div className=\"main-content\">{renderRoutes(routes)}</div>\n            </Suspense>\n            {settings.footer.show && <Footer></Footer>}\n          </div>\n        </div>\n        <GullSearch\n          open={settings.layout1Settings.searchBox.open}\n          handleClose={this.handleSearchBoxClose}\n        ></GullSearch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\n);\n"],"sourceRoot":""}