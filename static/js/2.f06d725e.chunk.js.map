{"version":3,"sources":["../node_modules/react-bootstrap/esm/DropdownContext.js","../node_modules/@restart/ui/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/@restart/ui/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownItem.js","../node_modules/@restart/ui/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/@restart/ui/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/InputGroupContext.js"],"names":["DropdownContext","React","displayName","_excluded","noop","useDropdownMenu","options","context","useContext","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","flip","offset","rootCloseEvent","fixed","placementOverride","placement","popperConfig","enableEventListeners","usePopper","shouldUsePopper","show","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","popper","mergeOptionsWithPopperConfig","enabled","enableEvents","menuProps","Object","assign","ref","id","attributes","style","styles","metadata","hasShown","arrowProps","arrow","useClickOutside","clickTrigger","disabled","DropdownMenu","_ref","children","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","props","meta","_jsx","_Fragment","defaultProps","useWrappedRefWithWarning","componentName","isRoleMenu","el","_el$getAttribute","getAttribute","toLowerCase","useDropdownToggle","useSSRSafeId","setToggle","handleClick","useCallback","onClick","DropdownToggle","useDropdownItem","href","active","onSelectCtx","SelectableContext","activeKey","NavContext","eventKey","makeEventKey","isActive","useEventCallback","event","isPropagationStopped","undefined","dataAttr","DropdownItem","as","Component","Button","dropdownItemProps","useRefWithUpdate","forceUpdate","useForceUpdate","attachRef","element","Dropdown","defaultShow","rawShow","onSelect","rawOnToggle","onToggle","itemSelector","focusFirstItemOnShow","window","useWindow","useUncontrolledProp","menuRef","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","type","originalEvent","handleSelect","useMemo","contains","ownerDocument","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","qsa","useEffect","getNextFocusedChild","items","index","Math","max","min","useEventListener","document","_menuRef$current","_toggleRef$current","fromMenu","fromToggle","tagName","next","preventDefault","addEventListener","_menuRef$current2","once","stopPropagation","Provider","value","Menu","Toggle","Item","bsPrefix","className","Anchor","prefix","useBootstrapPrefix","classNames","DropdownHeader","createWithBsPrefix","role","DropdownDivider","DropdownItemText","pProps","useUncontrolled","drop","align","autoClose","navbar","isInputGroup","InputGroupContext","isRTL","useIsRTL","handleToggle","currentTarget","alignEnd","getDropdownMenuPlacement","contextValue","BaseDropdown","ItemText","Divider","Header","useButtonProps","rel","tabIndex","trim","isTrivialHref","onKeyDown","asProp","buttonProps","eventTarget","listener","capture","handler","removeEventListener","variant","size","isReactNative","global","navigator","product","isDOM","useLayoutEffect","String","property","dataProp","toArray","Function","prototype","bind","call","slice","selector","querySelectorAll","WeakMap","handleKeyDown","useReducer","state","round","random","createContext","cur","Boolean","createElement","defaultId","ctx","console","warn","isInSSRContext","isSSR","setIsSSR","dropDirection","showProps","renderOnMount","isNavbar","NavbarContext","contextAlign","alignClasses","brkPoint","direction","push","useMergedRefs","useIsomorphicEffect","update","close","split","childBsPrefix","dropdownContext","toggleProps"],"mappings":"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","file":"static/js/2.f06d725e.chunk.js","sourcesContent":["import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext({});\nDropdownContext.displayName = 'DropdownContext';\nexport default DropdownContext;","const _excluded = [\"children\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst noop = () => {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n    children\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  const warningRef = useCallback(refValue => {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `${componentName} injected a ref to a provided \\`as\\` component that resolved to a component instance instead of a DOM element. ` + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import { useContext, useCallback } from 'react';\nimport * as React from 'react';\nimport { useSSRSafeId } from './ssr';\nimport DropdownContext from './DropdownContext';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const isRoleMenu = el => {\n  var _el$getAttribute;\n\n  return ((_el$getAttribute = el.getAttribute('role')) == null ? void 0 : _el$getAttribute.toLowerCase()) === 'menu';\n};\n\nconst noop = () => {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  const id = useSSRSafeId();\n  const {\n    show = false,\n    toggle = noop,\n    setToggle,\n    menuElement\n  } = useContext(DropdownContext) || {};\n  const handleClick = useCallback(e => {\n    toggle(!show, e);\n  }, [show, toggle]);\n  const props = {\n    id,\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-expanded': !!show\n  }; // This is maybe better down in an effect, but\n  // the component is going to update anyway when the menu element\n  // is set so might return new props.\n\n  if (menuElement && isRoleMenu(menuElement)) {\n    props['aria-haspopup'] = true;\n  }\n\n  return [props, {\n    show,\n    toggle\n  }];\n}\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle({\n  children\n}) {\n  const [props, meta] = useDropdownToggle();\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\n\nDropdownToggle.displayName = 'DropdownToggle';\n/** @component */\n\nexport default DropdownToggle;","const _excluded = [\"eventKey\", \"disabled\", \"onClick\", \"active\", \"as\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Create a dropdown item. Returns a set of props for the dropdown item component\n * including an `onClick` handler that prevents selection when the item is disabled\n */\nexport function useDropdownItem({\n  key,\n  href,\n  active,\n  disabled,\n  onClick\n}) {\n  const onSelectCtx = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const {\n    activeKey\n  } = navContext || {};\n  const eventKey = makeEventKey(key, href);\n  const isActive = active == null && key != null ? makeEventKey(activeKey) === eventKey : active;\n  const handleClick = useEventCallback(event => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(event);\n\n    if (onSelectCtx && !event.isPropagationStopped()) {\n      onSelectCtx(eventKey, event);\n    }\n  });\n  return [{\n    onClick: handleClick,\n    'aria-disabled': disabled || undefined,\n    'aria-selected': isActive,\n    [dataAttr('dropdown-item')]: ''\n  }, {\n    isActive\n  }];\n}\nconst DropdownItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    eventKey,\n    disabled,\n    onClick,\n    active,\n    as: Component = Button\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [dropdownItemProps] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n    ref: ref\n  }, dropdownItemProps));\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventListener from '@restart/hooks/useEventListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const window = useWindow();\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(menuElement.ownerDocument.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useEventListener(useCallback(() => window.document, [window]), 'keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu || key === 'Escape' && target.type === 'search')) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(target.ownerDocument, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useDropdownItem } from '@restart/ui/DropdownItem';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  eventKey,\n  disabled = false,\n  onClick,\n  active,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  const [dropdownItemProps, meta] = useDropdownItem({\n    key: eventKey,\n    href: props.href,\n    disabled,\n    onClick,\n    active\n  });\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...dropdownItemProps,\n    ref: ref,\n    className: classNames(className, prefix, meta.isActive && 'active', disabled && 'disabled')\n  });\n});\nDropdownItem.displayName = 'DropdownItem';\nexport default DropdownItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst defaultProps = {\n  navbar: false,\n  align: 'start',\n  autoClose: true\n};\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop,\n    show,\n    className,\n    align,\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, { ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'end' && 'dropend', drop === 'start' && 'dropstart')\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react'; // TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {ReactNode, useContext, useLayoutEffect, useMemo, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\n\ninterface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n/**\n * When using SSR with React Aria, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${++cur.current}`,\n    current: 0\n  }), [cur]);\n\n  return (\n    <SSRContext.Provider value={value}>\n      {props.children}\n    </SSRContext.Provider>\n  );\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\n/** @private */\nexport function useSSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  return useMemo(() => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`, [defaultId]);\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  let cur = useContext(SSRContext);\n  let isInSSRContext = cur !== defaultContext;\n  let [isSSR, setIsSSR] = useState(isInSSRContext);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof window !== 'undefined' && isInSSRContext) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return isSSR;\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownMenu } from '@restart/ui/DropdownMenu';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport DropdownContext from './DropdownContext';\nimport InputGroupContext from './InputGroupContext';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  flip: true\n};\nexport function getDropdownMenuPlacement(alignEnd, dropDirection, isRTL) {\n  const topStart = isRTL ? 'top-end' : 'top-start';\n  const topEnd = isRTL ? 'top-start' : 'top-end';\n  const bottomStart = isRTL ? 'bottom-end' : 'bottom-start';\n  const bottomEnd = isRTL ? 'bottom-start' : 'bottom-end';\n  const leftStart = isRTL ? 'right-start' : 'left-start';\n  const leftEnd = isRTL ? 'right-end' : 'left-end';\n  const rightStart = isRTL ? 'left-start' : 'right-start';\n  const rightEnd = isRTL ? 'left-end' : 'right-end';\n  let placement = alignEnd ? bottomEnd : bottomStart;\n  if (dropDirection === 'up') placement = alignEnd ? topEnd : topStart;else if (dropDirection === 'end') placement = alignEnd ? rightEnd : rightStart;else if (dropDirection === 'start') placement = alignEnd ? leftEnd : leftStart;\n  return placement;\n}\nconst DropdownMenu = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  align,\n  rootCloseEvent,\n  flip,\n  show: showProps,\n  renderOnMount,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  popperConfig,\n  variant,\n  ...props\n}, ref) => {\n  let alignEnd = false;\n  const isNavbar = useContext(NavbarContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  const {\n    align: contextAlign,\n    drop,\n    isRTL\n  } = useContext(DropdownContext);\n  align = align || contextAlign;\n  const isInputGroup = useContext(InputGroupContext);\n  const alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      const keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        const brkPoint = keys[0];\n        const direction = align[brkPoint]; // .dropdown-menu-end is required for responsively aligning\n        // left in addition to align left classes.\n\n        alignEnd = direction === 'start';\n        alignClasses.push(`${prefix}-${brkPoint}-${direction}`);\n      }\n    } else if (align === 'end') {\n      alignEnd = true;\n    }\n  }\n\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const [menuProps, {\n    hasShown,\n    popper,\n    show,\n    toggle\n  }] = useDropdownMenu({\n    flip,\n    rootCloseEvent,\n    show: showProps,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    offset: [0, 2],\n    popperConfig,\n    placement\n  });\n  menuProps.ref = useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref);\n  useIsomorphicEffect(() => {\n    // Popper's initial position for the menu is incorrect when\n    // renderOnMount=true. Need to call update() to correct it.\n    if (show) popper == null ? void 0 : popper.update();\n  }, [show]);\n  if (!hasShown && !renderOnMount && !isInputGroup) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = () => toggle == null ? void 0 : toggle(false);\n\n    menuProps.align = align;\n  }\n\n  let style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = { ...props.style,\n      ...menuProps.style\n    };\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...menuProps,\n    style: style // Bootstrap css requires this data attrib to style responsive menus.\n    ,\n    ...((alignClasses.length || isNavbar) && {\n      'data-bs-popper': 'static'\n    }),\n    className: classNames(className, prefix, show && 'show', alignEnd && `${prefix}-end`, variant && `${prefix}-${variant}`, ...alignClasses)\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  const isInputGroup = useContext(InputGroupContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, !!isInputGroup && (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import * as React from 'react';\nconst DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;"],"sourceRoot":""}