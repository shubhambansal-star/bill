{"version":3,"sources":["app/views/ui-kits/slider/BasicSlider.jsx","app/views/ui-kits/slider/RangeSlider.jsx","app/views/ui-kits/slider/StepSlider.jsx","app/views/ui-kits/slider/MarkSlider.jsx","app/views/ui-kits/slider/MinMaxSlider.jsx","app/views/ui-kits/slider/MultiRangeSlider.jsx","app/views/ui-kits/slider/MultiStyledSlider.jsx","app/views/ui-kits/slider/VerticalSlider.jsx","app/views/ui-kits/slider/AppSlider.jsx"],"names":["BasicSlider","useState","value","setValue","onChange","RangeSlider","handle","props","dragging","index","restProps","prefixCls","overlay","visible","placement","key","Handle","StepSlider","step","dots","marks","0","26","37","50","100","style","color","label","MarkSlider","className","min","included","MinMaxSlider","max","MultiRangeSlider","MultiStyledSlider","count","pushable","allowCross","trackStyle","backgroundColor","handleStyle","railStyle","VerticalSlider","height","vertical","AppSlider","state","routeSegments","name","path","SimpleCard","title","Component"],"mappings":"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","file":"static/js/129.3aebf0dc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\n\nconst BasicSlider = () => {\n  const [value, setValue] = useState(30);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return <Slider value={value} onChange={handleChange} />;\n};\n\nexport default BasicSlider;\n","import React, { useState } from \"react\";\nimport { Range } from \"rc-slider\";\n\nconst RangeSlider = () => {\n  const [value, setValue] = useState([25, 75]);\n\n  const handleChange = (value) => {\n    setValue(value);\n  };\n\n  return <Range value={value} onChange={handleChange} />;\n};\n\nexport default RangeSlider;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst StepSlider = () => {\n  const [value, setValue] = useState(30);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return (\n    <Slider\n      step={25}\n      dots={true}\n      value={value}\n      handle={handle}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default StepSlider;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst marks = {\n  \"-10\": \"-10°C\",\n  0: <strong>0°C</strong>,\n  26: \"26°C\",\n  37: \"37°C\",\n  50: \"50°C\",\n  100: {\n    style: {\n      color: \"red\"\n    },\n    label: <strong>100°C</strong>\n  }\n};\n\nconst MarkSlider = () => {\n  const [value, setValue] = useState(30);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return (\n    <div className=\"px-3 pb-3\">\n      <Slider\n        step={25}\n        min={-10}\n        dots={true}\n        included={true}\n        marks={marks}\n        value={value}\n        handle={handle}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nexport default MarkSlider;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst MinMaxSlider = () => {\n  const [value, setValue] = useState(30);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return (\n    <Slider\n      min={-25}\n      max={75}\n      value={value}\n      handle={handle}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default MinMaxSlider;\n","import React, { useState } from \"react\";\nimport Slider, { Range } from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst MultiRangeSlider = () => {\n  const [value, setValue] = useState([15, 35, 65, 85]);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return <Range value={value} handle={handle} onChange={handleChange} />;\n};\n\nexport default MultiRangeSlider;\n","import React, { useState } from \"react\";\nimport Slider, { Range } from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst MultiStyledSlider = () => {\n  const [value, setValue] = useState([10, 20, 60, 80]);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return (\n    <Range\n      count={3}\n      value={value}\n      pushable\n      handle={handle}\n      allowCross={false}\n      onChange={handleChange}\n      trackStyle={[{ backgroundColor: \"red\" }, { backgroundColor: \"green\" }]}\n      handleStyle={[\n        { backgroundColor: \"yellow\" },\n        { backgroundColor: \"white\" }\n      ]}\n      railStyle={{ backgroundColor: \"black\" }}\n    />\n  );\n};\n\nexport default MultiStyledSlider;\n","import React, { useState } from \"react\";\nimport Slider from \"rc-slider\";\nimport Tooltip from \"rc-tooltip\";\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Slider.Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nconst VerticalSlider = () => {\n  const [value, setValue] = useState(30);\n\n  const handleChange = value => {\n    setValue(value);\n  };\n\n  return (\n    <div style={{ height: \"200px\" }}>\n      <Slider handle={handle} vertical value={value} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default VerticalSlider;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\nimport BasicSlider from \"./BasicSlider\";\nimport RangeSlider from \"./RangeSlider\";\nimport StepSlider from \"./StepSlider\";\nimport MarkSlider from \"./MarkSlider\";\nimport MinMaxSlider from \"./MinMaxSlider\";\nimport MultiRangeSlider from \"./MultiRangeSlider\";\nimport MultiStyledSlider from \"./MultiStyledSlider\";\nimport VerticalSlider from \"./VerticalSlider\";\n\nclass AppSlider extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Sliders\" }\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row\">\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"Basic slider\">\n              <BasicSlider></BasicSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"range slider\">\n              <RangeSlider></RangeSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"step slider\">\n              <StepSlider></StepSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"mark slider with fixed values\">\n              <MarkSlider></MarkSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"slider with minimum and maximum\">\n              <MinMaxSlider></MinMaxSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"Multi Range slider\">\n              <MultiRangeSlider></MultiRangeSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"Multi Range slider with style\">\n              <MultiStyledSlider></MultiStyledSlider>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-4\">\n            <SimpleCard title=\"Vertical Slider\">\n              <VerticalSlider></VerticalSlider>\n            </SimpleCard>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppSlider;\n"],"sourceRoot":""}