{"version":3,"sources":["app/GullLayout/Layout3/Layout3Header.jsx","app/GullLayout/Layout3/Layout3.jsx"],"names":["Layout3Header","state","shorcutMenuList","icon","link","text","notificationList","title","description","time","color","status","handleMenuClick","props","setLayoutSettings","settings","merge","layout3Settings","leftSidebar","open","toggleFullScreen","document","fullscreenEnabled","fullscreen","exitFullscreen","documentElement","requestFullscreen","handleSearchBoxOpen","searchBox","this","className","src","alt","onClick","classList","navigations","map","parent","index","key","htmlFor","name","to","sub","path","type","id","child","i","style","margin","data-fullscreen","Dropdown","DropdownToggle","variant","data-toggle","aria-haspopup","aria-expanded","DropdownMenu","logoutUser","Component","withRouter","connect","PropTypes","func","isRequired","layout","Layout3","handleSearchBoxClose","routes","renderRoutes","Footer","GullSearch","handleClose"],"mappings":"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","file":"static/js/92.d07d86ac.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\nimport { classList } from \"@utils\";\nimport DropdownToggle from \"react-bootstrap/DropdownToggle\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { merge } from \"lodash\";\nimport { navigations } from \"app/navigations\";\n\nclass Layout3Header extends Component {\n  state = {\n    shorcutMenuList: [\n      {\n        icon: \"i-Shop-4\",\n        link: \"#\",\n        text: \"Home\",\n      },\n      {\n        icon: \"i-Library\",\n        link: \"#\",\n        text: \"Ui Kits\",\n      },\n      {\n        icon: \"i-Drop\",\n        link: \"#\",\n        text: \"Apps\",\n      },\n      {\n        icon: \"i-File-Clipboard-File--Text\",\n        link: \"#\",\n        text: \"Form\",\n      },\n      {\n        icon: \"i-Checked-User\",\n        link: \"#\",\n        text: \"Sessions\",\n      },\n      {\n        icon: \"i-Ambulance\",\n        link: \"#\",\n        text: \"Support\",\n      },\n    ],\n    notificationList: [\n      {\n        icon: \"i-Speach-Bubble-6\",\n        title: \"New message\",\n        description: \"James: Hey! are you busy?\",\n        time: \"2019-10-30T02:10:18.931Z\",\n        color: \"primary\",\n        status: \"New\",\n      },\n      {\n        icon: \"i-Receipt-3\",\n        title: \"New order received\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"New\",\n      },\n      {\n        icon: \"i-Empty-Box\",\n        title: \"Product out of stock\",\n        description: \"1 Headphone, 3 iPhone\",\n        time: \"2019-05-10T02:10:18.931Z\",\n        color: \"danger\",\n        status: \"3\",\n      },\n      {\n        icon: \"i-Data-Power\",\n        title: \"Server up!\",\n        description: \"Server rebooted successfully\",\n        time: \"2019-03-10T02:10:18.931Z\",\n        color: \"success\",\n        status: \"3\",\n      },\n    ],\n  };\n\n  handleMenuClick = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          leftSidebar: {\n            open: !settings.layout3Settings.leftSidebar.open,\n          },\n        },\n      })\n    );\n  };\n\n  toggleFullScreen = () => {\n    if (document.fullscreenEnabled) {\n      if (!document.fullscreen) document.documentElement.requestFullscreen();\n      else document.exitFullscreen();\n    }\n  };\n\n  handleSearchBoxOpen = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          searchBox: {\n            open: true,\n          },\n        },\n      })\n    );\n  };\n\n  render() {\n    let { shorcutMenuList = [], notificationList = [] } = this.state;\n    let { settings } = this.props;\n\n    return (\n      <Fragment>\n        <div className=\"main-header\">\n          <div className=\"logo\">\n            <img src=\"/assets/images/logo.png\" alt=\"\" />\n          </div>\n\n          <div className=\"menu-toggle\" onClick={this.handleMenuClick}>\n            <div></div>\n            <div></div>\n            <div></div>\n          </div>\n\n          <div\n            className={classList({\n              \"header-topnav\": true,\n              open: settings.layout3Settings.leftSidebar.open,\n            })}\n          >\n            \n              <div className=\"topnav\">\n                <ul className=\"menu float-left\">\n                  {navigations.map((parent, index) => (\n                    <li key={index}>\n                      <div>\n                        <div>\n                          <label className=\"toggle\" htmlFor={`drop-${index}`}>\n                            {parent.name}\n                          </label>\n                          <Link to={!parent.sub ? parent.path : \"#\"}>\n                            <i className={`nav-icon mr-2 ${parent.icon}`}></i>\n                            &nbsp; {parent.name}\n                          </Link>\n                          <input type=\"checkbox\" id={`drop-${index}`} />\n                          <ul>\n                            {parent.sub &&\n                              parent.sub.map((child, i) => (\n                                <li key={i}>\n                                  <Link to={child.path || \"#\"}>\n                                    <i\n                                      className={`nav-icon mr-2 ${child.icon}`}\n                                    ></i>\n                                    <span className=\"item-name\">\n                                      &nbsp; {child.name}\n                                    </span>\n                                  </Link>\n                                </li>\n                              ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            \n          </div>\n        \n\n\n\n          {/* //here */}\n\n\n          <div style={{ margin: \"auto\" }}></div>\n\n          <div className=\"header-part-right\">\n            <i\n              className=\"i-Full-Screen header-icon d-none d-sm-inline-block\"\n              data-fullscreen\n              onClick={this.toggleFullScreen}\n            ></i>\n            <div className=\"user col align-self-end\">\n              <Dropdown>\n                <DropdownToggle variant=\"link\" className=\"toggle-hidden\">\n                  <img\n                    src=\"/assets/images/faces/1.jpg\"\n                    id=\"userDropdown\"\n                    alt=\"\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  />\n                </DropdownToggle>\n                <DropdownMenu>\n                  <div className=\"dropdown-header\">\n                    <i className=\"i-Lock-User mr-1\"></i> Timothy Carlson\n                  </div>\n                  <span\n                    className=\"dropdown-item cursor-pointer\"\n                    onClick={this.props.logoutUser}\n                  >\n                    Sign out\n                  </span>\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n          </div>\n        </div>\n\n        \n      </Fragment>\n    );\n  }\n}\n\nLayout3Header.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n  })(Layout3Header)\n);\n","import React, { Component } from \"react\";\nimport { renderRoutes } from \"react-router-config\";\nimport Footer from \"../SharedComponents/Footer\";\nimport { connect } from \"react-redux\";\nimport { merge } from \"lodash\";\nimport { classList } from \"@utils\";\nimport Layout3Header from \"./Layout3Header\";\nimport GullSearch from \"@gull/components/GullSearch\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nclass Layout3 extends Component {\n  state = {};\n\n  handleSearchBoxClose = () => {\n    let { setLayoutSettings, settings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout3Settings: {\n          searchBox: {\n            open: false,\n          },\n        },\n      })\n    );\n  };\n\n  render() {\n    let { settings, routes } = this.props;\n\n    return (\n      <div>\n        <div className=\"app-admin-wrap  layout-horizontal-bar\">\n          <Layout3Header></Layout3Header>\n\n          <div\n            className={classList({\n              \"main-content-wrap d-flex flex-column\": true,\n            })}\n          >\n            <div className=\"main-content\">{renderRoutes(routes)}</div>\n\n            <Footer></Footer>\n          </div>\n        </div>\n        <GullSearch\n          open={settings.layout3Settings.searchBox.open}\n          handleClose={this.handleSearchBoxClose}\n        ></GullSearch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  settings: state.layout.settings,\n});\n\nexport default connect(mapStateToProps, { setLayoutSettings })(Layout3);\n"],"sourceRoot":""}