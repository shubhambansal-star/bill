{"version":3,"sources":["app/views/dataTable/SearchableDataTable.jsx"],"names":["SearchableDataTable","state","userList","defaultSorted","dataField","order","columns","text","align","headerAlign","sortableColumn","sort","paginationOptions","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","totalSize","length","axios","get","then","data","map","ind","id","name","email","age","company","balance","index","setState","this","SearchBar","Search","routeSegments","path","title","striped","keyField","search","props","className","searchProps","baseProps","bootstrap4","pagination","paginationFactory","noDataIndication","Component"],"mappings":"2PAQMA,E,4MACJC,MAAQ,CACNC,SAAU,I,EAGZC,cAAgB,CACd,CACEC,UAAW,OACXC,MAAO,Q,EAqBXC,QAAU,CACR,CACEF,UAAW,QACXG,KAAM,MAER,CACEH,UAAW,OACXG,KAAM,aAER,CACEH,UAAW,QACXG,KAAM,cAER,CACEH,UAAW,UACXG,KAAM,WAER,CACEH,UAAW,UACXG,KAAM,UACNC,MAAO,SACPC,YAAa,UAEf,CACEL,UAAW,MACXG,KAAM,MACNC,MAAO,SACPC,YAAa,W,EAIjBC,eAAiB,CACf,CACEN,UAAW,QACXG,KAAM,KACNI,MAAM,GAER,CACEP,UAAW,OACXG,KAAM,YACNI,MAAM,GAER,CACEP,UAAW,QACXG,KAAM,aACNI,MAAM,GAER,CACEP,UAAW,UACXG,KAAM,UACNI,MAAM,GAER,CACEP,UAAW,UACXG,KAAM,UACNI,MAAM,EACNH,MAAO,SACPC,YAAa,UAEf,CACEL,UAAW,MACXG,KAAM,MACNI,MAAM,EACNH,MAAO,SACPC,YAAa,W,EAIjBG,kBAAoB,CAElBC,eAAgB,EAChBC,eAAgB,EAChBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,UAAW,EAAKvB,MAAMC,SAASuB,Q,uDAlGjC,WAAqB,IAAD,OAClBC,IAAMC,IAAI,iBAAiBC,MAAK,YAAe,IACzC1B,EADwC,EAAX2B,KACbC,KAClB,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,IAAKC,EAAzB,EAAyBA,QAAzB,MAAsD,CACpDJ,KACAC,OACAC,QACAC,MACAE,QALF,EAAkCA,QAMhCD,UACAE,MAAOP,EAAM,MAGjB,EAAKQ,SAAS,CAAErC,kB,oBAwFpB,WAAU,IAAD,OACDA,EAAasC,KAAKvC,MAAlBC,SACAuC,EAAcC,SAAdD,UAEN,OACE,6BACE,kBAAC,IAAD,CACEE,cAAe,CACb,CAAEV,KAAM,YAAaW,KAAM,KAC3B,CAAEX,KAAM,aAAcW,KAAM,cAC5B,CAAEX,KAAM,4BAGZ,kBAAC,IAAD,CAAYY,MAAM,yBAChB,kBAAC,IAAD,CACEC,SAAO,EACPC,SAAS,KACTlB,KAAM3B,EACNI,QAASkC,KAAK9B,eACdsC,QAAM,IAEL,SAACC,GAAD,OACC,oCACE,yBAAKC,UAAU,iDACb,0BAAMA,UAAU,aAAhB,WACA,kBAACT,EAAD,iBAAeQ,EAAME,YAArB,CAAkCD,UAAU,WAE9C,kBAAC,IAAD,iBACMD,EAAMG,UADZ,CAEEC,YAAU,EACVC,WAAYC,IAAkB,EAAK3C,mBACnC4C,iBAAkB,8B,GAhJFC,aA2JnBzD","file":"static/js/106.eb571480.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { SimpleCard } from \"@gull\";\nimport axios from \"axios\";\n\nclass SearchableDataTable extends Component {\n  state = {\n    userList: [],\n  };\n\n  defaultSorted = [\n    {\n      dataField: \"name\",\n      order: \"asc\",\n    },\n  ];\n\n  componentDidMount() {\n    axios.get(\"/api/user/all\").then(({ data }) => {\n      let userList = data.map(\n        ({ id, name, email, age, company, balance }, ind) => ({\n          id,\n          name,\n          email,\n          age,\n          balance,\n          company,\n          index: ind + 1,\n        })\n      );\n      this.setState({ userList });\n    });\n  }\n\n  columns = [\n    {\n      dataField: \"index\",\n      text: \"No\",\n    },\n    {\n      dataField: \"name\",\n      text: \"User Name\",\n    },\n    {\n      dataField: \"email\",\n      text: \"User Email\",\n    },\n    {\n      dataField: \"company\",\n      text: \"Company\",\n    },\n    {\n      dataField: \"balance\",\n      text: \"Balance\",\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      dataField: \"age\",\n      text: \"Age\",\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n  ];\n\n  sortableColumn = [\n    {\n      dataField: \"index\",\n      text: \"No\",\n      sort: true,\n    },\n    {\n      dataField: \"name\",\n      text: \"User Name\",\n      sort: true,\n    },\n    {\n      dataField: \"email\",\n      text: \"User Email\",\n      sort: true,\n    },\n    {\n      dataField: \"company\",\n      text: \"Company\",\n      sort: true,\n    },\n    {\n      dataField: \"balance\",\n      text: \"Balance\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      dataField: \"age\",\n      text: \"Age\",\n      sort: true,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n  ];\n\n  paginationOptions = {\n    // custom: true,\n    paginationSize: 5,\n    pageStartIndex: 1,\n    firstPageText: \"First\",\n    prePageText: \"Back\",\n    nextPageText: \"Next\",\n    lastPageText: \"Last\",\n    nextPageTitle: \"First page\",\n    prePageTitle: \"Pre page\",\n    firstPageTitle: \"Next page\",\n    lastPageTitle: \"Last page\",\n    showTotal: true,\n    totalSize: this.state.userList.length,\n  };\n\n  render() {\n    let { userList } = this.state;\n    let { SearchBar } = Search;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Dashboard\", path: \"/\" },\n            { name: \"Data Table\", path: \"data-table\" },\n            { name: \"Searchable Data Table\" },\n          ]}\n        />\n        <SimpleCard title=\"Searchable Data Table\">\n          <ToolkitProvider\n            striped\n            keyField=\"id\"\n            data={userList}\n            columns={this.sortableColumn}\n            search\n          >\n            {(props) => (\n              <>\n                <div className=\"d-flex justify-content-end align-items-center\">\n                  <span className=\"mb-2 me-1\">Search:</span>\n                  <SearchBar {...props.searchProps} className=\"mb-2\" />\n                </div>\n                <BootstrapTable\n                  {...props.baseProps}\n                  bootstrap4\n                  pagination={paginationFactory(this.paginationOptions)}\n                  noDataIndication={\"Table is empty\"}\n                />\n              </>\n            )}\n          </ToolkitProvider>\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default SearchableDataTable;\n"],"sourceRoot":""}