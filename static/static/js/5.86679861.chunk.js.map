{"version":3,"sources":["../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/react-bootstrap/esm/CloseButton.js"],"names":["addClass","element","className","classList","add","hasClass","setAttribute","baseVal","replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","remove","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","ownerDocument","active","nodeName","e","manager","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","forEach","m","removeAttribute","Object","assign","modal","modalIdx","indexOf","length","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","_excluded","useModalManager","provided","useWindow","modalManager","getManager","useRef","dialog","backdrop","current","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","createPortal","_jsxs","displayName","Manager","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","sharedManager","Selector","BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","marginProp","qsa","el","adjustAndStore","restore","createWithBsPrefix","ModalContext","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","classNames","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","CloseButton","variant","defaultProps","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","propTypes","PropTypes","string","func","oneOf","type"],"mappings":"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","file":"static/js/5.86679861.chunk.js","sourcesContent":["import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n\n  baseModalStyle.display = 'block';\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;"],"sourceRoot":""}