{"version":3,"sources":["app/views/ui-kits/tables/AppTable.jsx"],"names":["AppTable","state","newUserList","name","email","status","photoUrl","getUserStatusClass","this","routeSegments","path","className","title","id","scope","map","user","index","key","src","alt","Component"],"mappings":"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","file":"static/js/130.6589e848.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb } from \"@gull\";\nimport SimpleCard from \"@gull/components/cards/SimpleCard\";\n\nclass AppTable extends Component {\n  state = {\n    newUserList: [\n      {\n        name: \"Smith Doe\",\n        email: \"Smith@gmail.com\",\n        status: \"active\",\n        photoUrl: \"/assets/images/faces/1.jpg\",\n      },\n      {\n        name: \"Jhon Doe\",\n        email: \"Jhon@gmail.com\",\n        status: \"pending\",\n        photoUrl: \"/assets/images/faces/2.jpg\",\n      },\n      {\n        name: \"Alex\",\n        email: \"Otttio@gmail.com\",\n        status: \"inactive\",\n        photoUrl: \"/assets/images/faces/3.jpg\",\n      },\n    ],\n  };\n\n  getUserStatusClass = (status) => {\n    switch (status) {\n      case \"active\":\n        return \"bg-success\";\n      case \"inactive\":\n        return \"bg-warning\";\n      case \"pending\":\n        return \"bg-primary\";\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { newUserList } = this.state;\n\n    return (\n      <div>\n        <Breadcrumb\n          routeSegments={[\n            { name: \"UI Kits\", path: \"/uikits\" },\n            { name: \"Table\" },\n          ]}\n        ></Breadcrumb>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"basic table\">\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table  text-center\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Basic Dark Table\">\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-dark  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success me-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger me-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"light table head\">\n              <p>\n                Similar to tables and dark tables, use the modifier classes\n                <code>.thead-light</code> to make <code>thead</code> appear\n                light\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table  text-center\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success me-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger me-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Table head\">\n              <p>\n                Similar to tables and dark tables, use the modifier classes\n                <code>.thead-dark</code> to make <code>thead</code> appear Dark\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table  text-center\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success me-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger me-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Striped rows\">\n              <p>\n                Use <code>.table-striped</code> to add zebra-striping to any\n                table rowwithin the <code>&lt;tbody&gt;</code>.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-striped  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success me-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger me-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Table head\">\n              <p>\n                Use <code>.table-striped</code> to add zebra-striping to any\n                table rowwithin the <code>&lt;tbody&gt;</code>.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-striped table-dark  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Light Bordered Table\">\n              <p>\n                Add <code>.table-bordered</code> for borders on all sides of the\n                table and cells.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-bordered  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Bordered Table\">\n              <p>\n                Add <code>.table-bordered</code> for borders on all sides of the\n                table and cells.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-bordered table-dark\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Light Borderless Table\">\n              <p>\n                Add <code>.table-borderless</code> for a table without borders.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-borderless  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Bordereless Table\">\n              <p>\n                Add <code>.table-borderless</code> for a table without borders.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-borderless table-dark\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Light hoverable Table\">\n              <p>\n                Add <code>.table-hover</code> to enable a hover state on table\n                rows within a <code>&lt;tbody&gt;</code>.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-hover  text-center\"\n                >\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark hoverable Table\">\n              <p>\n                Add <code>.table-hover</code> to enable a hover state on table\n                rows within a <code>&lt;tbody&gt;</code>.\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table table-hover table-dark\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Light Small Table\">\n              <p>\n                Add <code>.table-sm</code> to make tables more compact by\n                cutting cell padding in half.\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table table-sm  text-center\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Small Table\">\n              <p>\n                Add <code>.table-sm</code> to make tables more compact by\n                cutting cell padding in half.\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table table-sm table-dark\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Light Table With Contextual classes\">\n              <p>\n                Use contextual classes to color table rows or individual cells.\n              </p>\n              <div className=\"table-responsive\">\n                <table className=\"table \">\n                  <thead className=\"\">\n                    <tr className=\"table-primary\">\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">First</th>\n                      <th scope=\"col\">Last</th>\n                      <th scope=\"col\">Handle</th>\n                      <th scope=\"col\">Handle 2</th>\n                      <th scope=\"col\">Handle 3</th>\n                      <th scope=\"col\">Handle 4</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"table-success\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"table-active\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"table-info\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"table-warning\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"table-dark\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr>\n                      <td className=\"table-active\">...</td>\n\n                      <td className=\"table-primary\">...</td>\n                      <td className=\"table-secondary\">...</td>\n                      <td className=\"table-success\">...</td>\n                      <td className=\"table-danger\">...</td>\n                      <td className=\"table-warning\">...</td>\n                      <td className=\"table-info\">...</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Table With Background\">\n              <p>\n                Regular table background variants are not available with the\n                dark table, however, you may use text or background utilities to\n                achieve similar styles.\n              </p>\n              <div className=\"table-responsive\">\n                <table className=\"table  table-dark \">\n                  <thead className=\"\">\n                    <tr className=\"bg-primary\">\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">First</th>\n                      <th scope=\"col\">Last</th>\n                      <th scope=\"col\">Handle</th>\n                      <th scope=\"col\">Handle 2</th>\n                      <th scope=\"col\">Handle 3</th>\n                      <th scope=\"col\">Handle 4</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"bg-success\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"bg-active\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"bg-info\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"bg-warning\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr className=\"bg-dark\">\n                      <th scope=\"row\">1</th>\n                      <td>Mark</td>\n                      <td>Otto</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                      <td>@mdo</td>\n                    </tr>\n                    <tr>\n                      <td className=\"bg-active\">...</td>\n\n                      <td className=\"bg-primary\">...</td>\n                      <td className=\"bg-secondary\">...</td>\n                      <td className=\"bg-success\">...</td>\n                      <td className=\"bg-danger\">...</td>\n                      <td className=\"bg-warning\">...</td>\n                      <td className=\"bg-info\">...</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"light table with caption\">\n              <p>\n                A <code>&lt;caption&gt;</code> functions like a heading for a\n                table. It helps users with screen readers to find a table and\n                understand what it’s about and decide if they want to read it.\n              </p>\n              <div className=\"table-responsive\">\n                <table id=\"user_table\" className=\"table  text-center\">\n                  <caption>List of users</caption>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <SimpleCard title=\"Dark Table with catption\">\n              <p>\n                A <code>&lt;caption&gt;</code> functions like a heading for a\n                table. It helps users with screen readers to find a table and\n                understand what it’s about and decide if they want to read it.\n              </p>\n              <div className=\"table-responsive\">\n                <table\n                  id=\"user_table\"\n                  className=\"table table-dark  text-center\"\n                >\n                  <caption>List of users</caption>\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\">Avatar</th>\n                      <th scope=\"col\">Email</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {newUserList.map((user, index) => (\n                      <tr key={index}>\n                        <th scope=\"row\">{index + 1}</th>\n                        <td>{user.name}</td>\n                        <td>\n                          <img\n                            className=\"rounded-circle m-0 avatar-sm-table \"\n                            src={user.photoUrl}\n                            alt=\"\"\n                          />\n                        </td>\n\n                        <td>{user.email}</td>\n                        <td>\n                          <span\n                            className={`badge ${this.getUserStatusClass(\n                              user.status\n                            )}`}\n                          >\n                            {user.status}\n                          </span>\n                        </td>\n                        <td>\n                          <span className=\"cursor-pointer text-success mr-2\">\n                            <i className=\"nav-icon i-Pen-2 font-weight-bold\"></i>\n                          </span>\n                          <span className=\"cursor-pointer text-danger mr-2\">\n                            <i className=\"nav-icon i-Close-Window font-weight-bold\"></i>\n                          </span>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </SimpleCard>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AppTable;\n"],"sourceRoot":""}