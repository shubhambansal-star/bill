{"version":3,"sources":["app/appContext.js","@history.js","app/redux/actions/LayoutActions.js","app/GullLayout/index.js","@utils.js","app/GullLayout/SharedComponents/Customizer.jsx","app/GullLayout/GullLayout.jsx","app/auth/AuthGuard.jsx","app/views/app/invoice/invoiceRoutes.js","app/views/componentss/company/companyRoutes.js","app/views/componentss/party/PartyRoutes.js","app/RootRoutes.jsx","app/services/localStorageService.js","axios/axios.js","app/services/jwtAuthService.js","app/redux/actions/UserActions.js","app/redux/reducers/LoginReducer.js","app/redux/actions/LoginActions.js","app/redux/reducers/UserReducer.js","app/GullLayout/settings.js","app/GullLayout/Layout3/Layout3Settings.js","app/redux/reducers/LayoutReducer.js","app/redux/reducers/ScrumBoardReducer.js","app/redux/actions/ScrumBoardActions.js","app/redux/reducers/NotificationReducer.js","app/redux/actions/NotificationActions.js","app/redux/reducers/EcommerceReducer.js","app/redux/actions/EcommerceActions.js","app/redux/reducers/RootReducer.js","app/redux/Store.js","app/auth/Auth.jsx","@gull/components/DropDownMenuItem.jsx","@gull/components/GullLoadable/Loading.js","@gull/components/DropDownMenu.jsx","app/App.jsx","serviceWorker.js","index.jsx"],"names":["AppContext","React","createContext","createBrowserHistory","setLayoutSettings","data","dispatch","type","setDefaultSettings","GullLayouts","layout3","classList","classes","Object","entries","filter","entry","map","join","Customizer","state","sidebarColors","name","handleLayoutChange","layoutName","props","settings","merge","activeLayout","handleCustomizerToggle","customizer","open","handleDirectionChange","event","dir","document","documentElement","setAttribute","changeSidebarColor","colorClass","layout2Settings","leftSidebar","theme","this","id","className","onClick","data-perfect-scrollbar","data-suppress-scroll-x","aria-labelledby","data-parent","active","src","alt","c","i","title","key","checked","onChange","Component","connect","PropTypes","func","isRequired","layout","GullLayout","initAppDirection","setTimeout","prevProps","location","pathname","route","Layout","Fragment","routes","show","contextType","withRouter","defaultSettings","AuthGuard","context","authenticated","setState","flatMap","item","redirectRoute","nextProps","nextState","history","push","redirectUrl","user","matched","find","r","path","auth","length","includes","role","invoiceRoutes","component","companyRoutes","partyRoutes","exact","to","errorRoute","ls","window","localStorage","value","JSON","stringify","setItem","getItem","parse","e","token","localStorageService","axios","defaults","xsrfCookieName","xsrfHeaderName","headers","common","create","baseURL","userId","displayName","email","photoURL","age","loginWithEmailAndPassword","password","post","then","setSession","setUser","logout","removeUser","removeItem","setUserData","initialState","success","loading","error","username","LoginReducer","action","userReducer","console","log","GullLayoutSettings","layout3Settings","mode","bgOpacity","bgImgURL","header","fixed","searchBox","secondarySidebar","footer","LayoutReducer","ScrumBoardReducer","memberList","payload","labelList","boardList","board","NotificationReducer","productList","cartList","EcommerceReducer","categoryList","ratingList","brandList","RootReducer","combineReducers","login","UserReducer","scrumboard","notification","ecommerce","middlewares","thunk","Store","createStore","compose","applyMiddleware","x","Auth","checkJwtAuth","jwtAuthService","children","DropDownMenuItem","collapsed","elementRef","createRef","componentHeight","onItemClick","node","child","calcaulateHeight","clientHeight","icon","ref","el","style","maxHeight","styles","position","left","right","top","margin","height","width","zIndex","Loading","App","Provider","store","fallback","renderRoutes","RootRoutes","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sQAIeA,EAFIC,IAAMC,cAAc,I,OCAxBC,gB,qDCEFC,EAAoB,SAAAC,GAAI,OAAI,SAAAC,GACvCA,EAAS,CACPC,KAN+B,sBAO/BF,KAAMA,MAIGG,EAAqB,SAAAH,GAAI,OAAI,SAAAC,GACxCA,EAAS,CACPC,KAZuC,8BAavCF,KAAMA,MCZGI,EAAc,CACzBC,QAHc,qB,cC0IT,SAASC,EAAUC,GACxB,OAAOC,OAAOC,QAAQF,GACnBG,QAAO,SAAAC,GAAK,OAAIA,EAAM,MACtBC,KAAI,SAAAD,GAAK,OAAIA,EAAM,MACnBE,KAAK,K,qBCnIJC,E,4MACJC,MAAQ,G,EAERC,cAAgB,CACd,CACEC,KAAM,0BAER,CACEA,KAAM,uBAER,CACEA,KAAM,uBAER,CACEA,KAAM,uBAER,CACEA,KAAM,eAER,CACEA,KAAM,cAER,CACEA,KAAM,iBAER,CACEA,KAAM,QAER,CACEA,KAAM,UAER,CACEA,KAAM,QAER,CACEA,KAAM,OAER,CACEA,KAAM,W,EAIVC,mBAAqB,SAAAC,GACnB,MAAsC,EAAKC,MAArCC,EAAN,EAAMA,UACNtB,EADA,EAAgBA,mBAEduB,gBAAM,GAAID,EAAU,CAClBE,aAAcJ,M,EAKpBK,uBAAyB,WACvB,MAAsC,EAAKJ,MAArCC,EAAN,EAAMA,UACNtB,EADA,EAAgBA,mBAEduB,gBAAM,GAAID,EAAU,CAClBI,WAAY,CACVC,MAAOL,EAASI,WAAWC,U,EAKnCC,sBAAwB,SAAAC,GACtB,MAAsC,EAAKR,MAArCC,EAAN,EAAMA,SAAUtB,EAAhB,EAAgBA,kBACZ8B,EAAuB,QAAjBR,EAASQ,IAAgB,MAAQ,MAC3CC,SAASC,gBAAgBC,aAAa,MAAOH,GAC7C9B,EACEuB,gBAAM,GAAID,EAAU,CAClBQ,IAAKA,M,EAIXI,mBAAqB,SAAAC,GACnB,MAAsC,EAAKd,MAArCC,EAAN,EAAMA,UACNtB,EADA,EAAgBA,mBAEduB,gBAAM,GAAID,EAAU,CAClBc,gBAAiB,CACfC,YAAa,CACXC,MAAOH,Q,4CAOjB,WAAU,IAAD,OACDb,EAAaiB,KAAKlB,MAAlBC,SACAE,EAAiBF,EAAjBE,aAEN,OACE,yBACEgB,GAAG,aACHC,UAAWlC,EAAU,CACnBmB,YAAY,EACZC,KAAML,EAASI,WAAWC,QAG5B,yBAAKc,UAAU,SAASC,QAASH,KAAKd,wBACpC,uBAAGgB,UAAU,iBAEf,kBAAC,IAAD,CACEA,UAAU,kBACVE,0BAAA,EACAC,yBAAuB,QAEvB,yBAAKH,UAAU,YAAYD,GAAG,uBAC5B,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cAAcD,GAAG,cAC9B,uBAAGC,UAAU,QAAb,mBAGF,yBACED,GAAG,cACHC,UAAU,gBACVI,kBAAgB,eAChBC,cAAY,wBAEZ,yBAAKL,UAAU,qBACb,yBACEA,UAAWlC,EAAU,CACnB,cAAc,EACdwC,OAAyB,YAAjBvB,IAEVkB,QAAS,kBAAM,EAAKvB,mBAAmB,aAEvC,yBACE6B,IAAI,4CACJC,IAAI,KAEN,uBAAGR,UAAU,SAAb,MAEF,yBACEA,UAAWlC,EAAU,CACnB,cAAc,EACdwC,OAAyB,YAAjBvB,IAEVkB,QAAS,kBAAM,EAAKvB,mBAAmB,aAEvC,yBACE6B,IAAI,4CACJC,IAAI,KAEN,uBAAGR,UAAU,SAAb,SAKmB,YAA1BnB,EAASE,cACR,yBAAKiB,UAAU,QACb,yBAAKA,UAAU,cAAcD,GAAG,cAC9B,uBAAGC,UAAU,QAAb,mBAGF,yBACED,GAAG,cACHC,UAAU,gBACVI,kBAAgB,aAChBC,cAAY,wBAEZ,yBAAKL,UAAU,aACb,yBAAKA,UAAU,yBACZF,KAAKtB,cAAcJ,KAAI,SAACqC,EAAGC,GAAJ,OACtB,0BACEV,UAAS,gBAAWS,EAAEhC,MACtBkC,MAAOF,EAAEhC,KACTwB,QAAS,kBACP,EAAKR,mBAAL,kBAAmCgB,EAAEhC,QAEvCmC,IAAKF,GAEL,uBAAGV,UAAU,kBAS3B,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAcD,GAAG,cAC9B,uBAAGC,UAAU,QAAb,QAGF,yBACED,GAAG,cACHC,UAAU,gBACVI,kBAAgB,aAChBC,cAAY,wBAEZ,yBAAKL,UAAU,aACb,2BAAOA,UAAU,6BACf,2BACEtC,KAAK,WACLqC,GAAG,eACHc,QAA0B,QAAjBhC,EAASQ,IAClByB,SAAUhB,KAAKX,wBAEjB,4CACA,0BAAMa,UAAU,yB,GAtMXe,aAkPVC,eANS,SAAAzC,GAAK,MAAK,CAChChB,kBAAmB0D,IAAUC,KAAKC,WAClCxD,mBAAoBsD,IAAUC,KAAKC,WACnCtC,SAAUN,EAAM6C,OAAOvC,YAGe,CACtCtB,oBACAI,sBAFaqD,CAGZ1C,GCnPG+C,E,4MACJ9C,MAAQ,G,EAUR+C,iBAAmB,WACjB,IAAMzC,EAAa,EAAKD,MAAlBC,SACN0C,YAAW,WACTjC,SAASC,gBAAgBC,aAAa,MAAOX,EAASQ,S,wDAX1D,SAAmBmC,GACb1B,KAAKlB,MAAM6C,SAASC,SAAaF,EAAUC,SAASC,W,+BAG1D,WACE5B,KAAKwB,qB,oBAUP,WACE,MAAwCxB,KAAKlB,MAAvCG,EAAN,EAAMA,aAAc4C,EAApB,EAAoBA,MAAO9C,EAA3B,EAA2BA,SACvB+C,EAAShE,EAAYmB,GACzB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAM8C,SAAP,KACE,kBAACD,EAAD,CAAQE,OAAQH,EAAMG,SACrBjD,EAASI,WAAW8C,MAAQ,kBAAC,EAAD,Y,GAzBdhB,aAwCzBM,EAAWW,YAAc7E,EAEV8E,kBACbjB,aAXsB,SAACzC,GAAD,MAAY,CAClChB,kBAAmB0D,YAAUC,KAAKC,WAClCxD,mBAAoBsD,YAAUC,KAAKC,WACnCtC,SAAUN,EAAM6C,OAAOvC,SACvBE,aAAcR,EAAM6C,OAAOvC,SAASE,aACpCmD,gBAAiB3D,EAAM6C,OAAOc,mBAML,CAAE3E,oBAAmBI,sBAA9CqD,CACEK,ICnDEc,E,kDACJ,WAAYvD,EAAOwD,GAAU,IAAD,sBAC1B,cAAMxD,GACN,IAAMkD,EAAWM,EAAXN,OAFoB,OAI1B,EAAKvD,MAAQ,CACX8D,eAAe,EACfP,UANwB,E,qDAU5B,WACEhC,KAAKwC,SAAS,CACZR,OAAQS,kBAAQzC,KAAKvB,MAAMuD,QAAQ,SAAAU,GACjC,OAAIA,EAAKV,OACA,YAAIU,EAAKV,QAEX,CAACU,QAIP1C,KAAKvB,MAAM8D,eACdvC,KAAK2C,cAAc3C,KAAKlB,S,gCAI5B,WACOkB,KAAKvB,MAAM8D,eACdvC,KAAK2C,cAAc3C,KAAKlB,S,mCAI5B,SAAsB8D,EAAWC,GAC/B,OAAOA,EAAUN,gBAAkBvC,KAAKvB,MAAM8D,gB,2BAgBhD,SAAczD,GACZ,IAAQ6C,EAAsB7C,EAAtB6C,SAAUmB,EAAYhE,EAAZgE,QACVlB,EAAaD,EAAbC,SAERkB,EAAQC,KAAK,CACXnB,SAAU,kBACVnD,MAAO,CAAEuE,YAAapB,O,oBAI1B,WACE,IAAMC,EAAU7B,KAAKlB,MAAf+C,MAGN,OAF0B7B,KAAKvB,MAAvB8D,cAGN,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAYV,MAAOA,KAEnB,Q,uCA/BN,SAAgC/C,EAAOL,GACrC,IAAQkD,EAAmB7C,EAAnB6C,SAAUsB,EAASnE,EAATmE,KACVrB,EAAaD,EAAbC,SACFsB,EAAUzE,EAAMuD,OAAOmB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAASzB,KAKlD,MAAO,CACLW,gBAJAW,GAAWA,EAAQI,MAAQJ,EAAQI,KAAKC,SACpCL,EAAQI,KAAKE,SAASP,EAAKQ,W,GA1CbxC,aAuExBoB,EAAUH,YAAc7E,EAExB,ICjEeqG,EAXO,CACpB,CACEL,KAAM,gBACNM,UALmB,wBAOrB,CACEN,KAAM,eACNM,UAVmB,qBCaRC,EAXO,CACpB,CACEP,KAAM,gBACNM,UAJgB,iBAMlB,CACEN,KAAM,eACNM,UATmB,qBCaRE,EAXK,CAClB,CACER,KAAM,cACNM,UAJiB,mBAMnB,CACEN,KAAM,aACNM,UATiB,mBCOfhB,EAAgB,CACpB,CACEU,KAAM,IACNS,OAAO,EACPH,UAAW,kBAAM,kBAAC,IAAD,CAAUI,GAAG,uBAI5BC,EAAa,CACjB,CACEL,UAAW,kBAAM,kBAAC,IAAD,CAAUI,GAAG,oBAmBnB/B,EAfA,CAEb,CACEqB,KAAM,IACNM,UJ0DWxB,YAAWjB,aAJF,SAAAzC,GAAK,MAAK,CAChCwE,KAAMxE,EAAMwE,QAGY/B,CAAyBmB,IIzD/CL,OAAO,GAAD,mBACD0B,GADC,YAEDE,GAFC,YAGDC,GACAlB,EACAqB,K,uBCXM,M,iDAnBbC,GAAKC,OAAOC,a,2CAEZ,SAAQrD,EAAKsD,GAGX,OAFAA,EAAQC,KAAKC,UAAUF,GACvBpE,KAAKiE,GAAGM,QAAQzD,EAAKsD,IACd,I,qBAGT,SAAQtD,GACN,IAAIsD,EAAQpE,KAAKiE,GAAGO,QAAQ1D,GAC5B,IACE,OAAOuD,KAAKI,MAAML,GAClB,MAAOM,GACP,OAAO,U,sBCZPC,EAAQC,EAAoBJ,QAAQ,aAC1CK,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAChCH,IAAMC,SAASG,QAAQC,OAAvB,cAAiD,UAAYP,EAC9CE,UAAMM,OAAO,CAC1BC,QAAS,sBC6CI,M,8DA/CbnC,KAAO,CACLoC,OAAQ,IACR5B,KAAM,QACN6B,YAAa,eACbC,MAAO,wBACPC,SAAU,4BACVC,IAAK,GACLd,MAAO,wD,KAQTe,0BAA4B,SAACH,EAAOI,GAClC,OAAOd,EAAMe,KAAK,oBAAoB,CAAC3C,KAAK,CAACsC,MAAMA,EAAMI,SAASA,KAAYE,MAAK,SAAAnI,GAGjF,OAFA,EAAKoI,WAAWpI,EAAKA,KAAKuF,KAAK0B,OAC/B,EAAKoB,QAAQrI,EAAKA,KAAKuF,MAChBvF,EAAKA,KAAKuF,S,KAMrB+C,OAAS,WACP,EAAKF,WAAW,MAChB,EAAKG,c,KAGPH,WAAa,SAAAnB,GACPA,GACFC,EAAoBL,QAAQ,YAAaI,GACzCE,EAAMC,SAASG,QAAQC,OAAvB,cAAiD,UAAYP,IAE7DR,aAAa+B,WAAW,oBACjBrB,EAAMC,SAASG,QAAQC,OAAvB,gB,KAGXa,QAAU,SAAC9C,GACT2B,EAAoBL,QAAQ,YAAatB,I,KAE3CgD,WAAa,WACX9B,aAAa+B,WAAW,kBCzCrB,SAASC,EAAYlD,GAC1B,OAAO,SAAAtF,GACLA,EAAS,CACPC,KAPuB,gBAQvBF,KAAMuF,KCJZ,IAAMmD,EAAe,CACnBC,SAAS,EACTC,SAAS,EACTC,MAAO,CACLC,SAAU,KACVb,SAAU,OAuCCc,EAnCM,WAAwC,IAA/BhI,EAA8B,uDAAtB2H,EAAcM,EAAQ,uCAC1D,OAAQA,EAAO9I,MACb,ICbyB,gBDcvB,OAAO,2BACFa,GADL,IAEE6H,SAAS,IAGb,ICpByB,gBD2BzB,ICzB0B,iBD0BxB,OAAO,2BACF7H,GADL,IAEE4H,SAAS,EACTC,SAAS,IAGb,ICnCuB,cDoCrB,MAAO,CACLD,SAAS,EACTC,SAAS,EACTC,MAAOG,EAAOhJ,MAGlB,QACE,OAAOe,IExCP2H,EAAe,GAyBNO,EAvBK,WAAwC,IAA/BlI,EAA8B,uDAAtB2H,EAAcM,EAAQ,uCACzD,OAAQA,EAAO9I,MACb,IHPyB,gBGSvB,OADAgJ,QAAQC,IAAI,GACL,2BACFpI,GACAiI,EAAOhJ,MAGd,IHb4B,mBGc1B,OAAO,eACFe,GAGP,IHjB2B,kBGoB3B,QACE,OAAOA,ICxBAqI,EAAqB,CAChC7H,aAAc,UACdM,IAAK,MACLwH,gBCLsB,CACtBjH,YAAa,CACXV,MAAM,EACN4H,KAAM,QACNjH,MAAO,aACPkH,UAAW,IACXC,SAAU,8CAEZC,OAAQ,CACNlF,MAAM,EACNmF,OAAO,EACPrH,MAAO,cAETsH,UAAW,CACTjI,MAAM,GAERkI,iBAAkB,CAAErF,MAAM,GAC1BsF,OAAQ,CAAEtF,MAAM,IDXhB9C,WAAY,CACV8C,MAAM,EACN7C,MAAM,GAERmI,OAAQ,CACNtF,MAAM,IELJmE,EAAe,CACnBrH,SAAS,eACJ+H,GAEL1E,gBAAgB,eACX0E,IAqBQU,EAjBO,WAAmC,IAAlC/I,EAAiC,uDAAzB2H,EAAcM,EAAW,uCACtD,OAAQA,EAAO9I,MACb,InBjB+B,sBmBkB7B,OAAO,2BACFa,GADL,IAEEM,SAAS,eAAM2H,EAAOhJ,QAE1B,InBrBuC,8BmBsBrC,OAAO,2BACFe,GADL,IAEE2D,gBAAgB,eAAMsE,EAAOhJ,QAEjC,QACE,OAAO,eAAKe,KCVZ2H,GAAe,GAoGNqB,GAlGW,WAAwC,IAA/BhJ,EAA8B,uDAAtB2H,GAAcM,EAAQ,uCAC/D,OAAQA,EAAO9I,MACb,ICf2B,kBDgBzB,OAAO,2BACFa,GADL,IAEEiJ,WAAW,YAAKhB,EAAOiB,WAG3B,ICpB0B,iBDqBxB,OAAO,2BACFlJ,GADL,IAEEmJ,UAAU,YAAKlB,EAAOiB,WAG1B,IChCyB,gBDsCzB,ICpCqB,YDqCnB,OAAO,2BACFlJ,GADL,IAEEoJ,UAAU,YAAKnB,EAAOiB,WAG1B,IC3C2B,kBDiD3B,IC/C+B,sBDqD/B,ICpDoC,2BD0DpC,ICtDoB,WD4DpB,IC3DuB,cDiEvB,IC/DuB,cDqEvB,ICtEwB,eD4ExB,ICzEoB,WD+EpB,IC9EuB,cDoFvB,IClF6B,oBDwF7B,ICvFqB,YDwFnB,OAAO,2BACFlJ,GADL,IAEEqJ,MAAM,eAAMpB,EAAOiB,WAGvB,QACE,OAAOlJ,IE1GP2H,GAAe,GAsBN2B,GApBa,WAAwC,IAA/BtJ,EAA8B,uDAAtB2H,GAAcM,EAAQ,uCACjE,OAAQA,EAAO9I,MACb,ICT4B,mBDY5B,ICX+B,sBDc/B,ICb+B,sBDgB/B,ICfmC,0BDgBjC,OAAO,YAAI8I,EAAOiB,SAEpB,QACE,OAAO,YAAIlJ,KEbX2H,GAAe,CACnB4B,YAAa,GACbC,SAAU,IA6DGC,GA1DU,WAAwC,IAA/BzJ,EAA8B,uDAAtB2H,GAAcM,EAAQ,uCAC9D,OAAQA,EAAO9I,MACb,IChB4B,mBDiB1B,OAAO,2BACFa,GADL,IAEEuJ,YAAY,YAAKtB,EAAOiB,WAG5B,ICpB6B,oBDqB3B,OAAO,2BACFlJ,GADL,IAEE0J,aAAa,YAAKzB,EAAOiB,WAG7B,ICzB2B,kBD0BzB,OAAO,2BACFlJ,GADL,IAEE2J,WAAW,YAAK1B,EAAOiB,WAG3B,IC9B0B,iBD+BxB,OAAO,2BACFlJ,GADL,IAEE4J,UAAU,YAAK3B,EAAOiB,WAG1B,ICvCyB,gBD6CzB,ICxC+B,sBD8C/B,IC7CoC,2BDmDpC,ICjD8B,qBDkD5B,OAAO,2BACFlJ,GADL,IAEEwJ,SAAS,YAAKvB,EAAOiB,WAGzB,QACE,OAAO,eACFlJ,KEnDI6J,GATKC,YAAgB,CAClCC,MAAO/B,EACPxD,KAAMwF,EACNnH,OAAQkG,EACRkB,WAAYjB,GACZkB,aAAcZ,GACda,UAAWV,KCRPW,GAAc,CAACC,KAWd,IAAMC,GAAQC,YACnBV,GAdmB,GAgBnBW,YAAQC,IAAe,WAAf,EAAmBL,KAbd,SAAAM,GAAC,OAAIA,M,SCAdC,G,kDAGJ,WAAYtK,GAAQ,IAAD,8BACjB,cAAMA,IAHRL,MAAQ,GAEW,EAKnB4K,aAAe,WACbC,EAAe5D,4BAA4BG,MAAK,SAAA5C,GAC9C,EAAKnE,MAAMqH,YAAYlD,OALzB,EAAKnE,MAAMqH,YAAYvB,EAAoBJ,QAAQ,cAFlC,E,0CAWnB,WACE,IAAQ+E,EAAavJ,KAAKlB,MAAlByK,SACR,OAAO,kBAAC,WAAD,KAAWA,O,GAhBHtI,aAyBJC,gBALS,SAAAzC,GAAK,MAAK,CAChC0H,YAAahF,YAAUC,KAAKC,WAC5BmH,MAAO/J,EAAM+J,SAGyB,CAAErC,eAA3BjF,CAA0CkI,I,kBCoC1CI,G,4MAhEb/K,MAAQ,CACNgL,WAAW,G,EAEbC,WAAapM,IAAMqM,Y,EAEnBC,gBAAkB,E,EAqBlBC,YAAc,WACZ,EAAKrH,SAAS,CAAEiH,WAAY,EAAKhL,MAAMgL,a,sDArBzC,SAAiBK,GACf,GAAkB,UAAdA,EAAKnL,KAAkB,CAAC,IAAD,iBACPmL,EAAKP,UADE,IACzB,2BAAiC,CAAC,IAAzBQ,EAAwB,QAC/B/J,KAAKgK,iBAAiBD,IAFC,+BAK3B/J,KAAK4J,iBAAmBE,EAAKG,e,+BAG/B,WACEjK,KAAKgK,iBAAiBhK,KAAK0J,c,oBAc7B,WAAU,IAAD,OACDD,EAAczJ,KAAKvB,MAAnBgL,UACAF,EAAavJ,KAAKlB,MAAlByK,SACN,EAAqBvJ,KAAKlB,MAAM4D,KAA1B/D,EAAN,EAAMA,KAAMuL,EAAZ,EAAYA,KAEZ,OACE,wBACEhK,UAAWlC,EAAU,CACnB,8BAA8B,EAC9BoB,MAAOqK,KAGT,yBAAKtJ,QAASH,KAAK6J,aACjB,uBAAG3J,UAAS,mBAAcgK,KAC1B,0BAAMhK,UAAU,aAAavB,GAC7B,uBAAGuB,UAAU,2BAGf,wBACEA,UAAU,UACViK,IAAK,SAAAC,GAAE,OAAK,EAAKV,WAAaU,GAC9BC,MACEZ,EACI,CAAEa,UAAW,OACb,CAAEA,UAAWtK,KAAK4J,gBAAkB,OAGzCL,Q,GA1DoBtI,aCDzBsJ,ICGqBtJ,YDHZ,CACbuJ,SAAU,QACVC,KAAM,EACNC,MAAO,EACPC,IAAK,mBACLC,OAAQ,OACRC,OAAQ,OACRC,MAAO,OACPC,OAAQ,YAWKC,GARC,WACd,OACE,yBAAKX,MAAOE,IACV,yBAAKrK,UAAU,oDEWN+K,OAdf,WACE,OACE,kBAAC,EAAWC,SAAZ,CAAqB9G,MAAO,CAAEpC,WAC5B,kBAAC,IAAD,CAAUmJ,MAAOpC,IACf,kBAAC,GAAD,KACE,kBAAC,WAAD,CAAUqC,SAAU,kBAAC,GAAD,OAClB,kBAAC,IAAD,CAAQtI,QAASA,GAAUuI,aAAaC,SCP9CC,GAAcC,QACW,cAA7BtH,OAAOvC,SAAS8J,UAEe,UAA7BvH,OAAOvC,SAAS8J,UAEhBvH,OAAOvC,SAAS8J,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT/F,MAAK,SAAAoG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1N,QACfqN,UAAUC,cAAcO,YAI1B1F,QAAQC,IACN,iHAKEgF,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBrF,QAAQC,IAAI,sCAGRgF,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAlG,GACLK,QAAQL,MAAM,4CAA6CA,MC1FjEmG,IAASC,OAAO,kBAAC,GAAD,MAASnN,SAASoN,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwB5I,OAAOvC,SAASoL,MACpDC,SAAW9I,OAAOvC,SAASqL,OAIvC,OAGF9I,OAAO+I,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMkB,GAAN,sBAEPvB,KAgEV,SAAiCK,EAAOC,GAEtCqB,MAAMtB,GACH/F,MAAK,SAAAsH,GAEJ,IAAMC,EAAcD,EAASlI,QAAQoI,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAM3H,MAAK,SAAAoG,GACjCA,EAAawB,aAAa5H,MAAK,WAC7B3B,OAAOvC,SAAS+L,eAKpB/B,GAAgBC,EAAOC,MAG1BY,OAAM,WACL7F,QAAQC,IACN,oEArFA8G,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM3H,MAAK,WACjCe,QAAQC,IACN,iHAMJ8E,GAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.d332e549.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","export const SET_LAYOUT_SETTINGS = \"LAYOUT_SET_SETTINGS\";\nexport const SET_DEFAULT_LAYOUT_SETTINGS = \"LAYOUT_SET_DEFAULT_SETTINGS\";\n\n\nexport const setLayoutSettings = data => dispatch => {\n  dispatch({\n    type: SET_LAYOUT_SETTINGS,\n    data: data\n  });\n};\n\nexport const setDefaultSettings = data => dispatch => {\n  dispatch({\n    type: SET_DEFAULT_LAYOUT_SETTINGS,\n    data: data\n  });\n};","const Layout3 = \"./Layout3/Layout3\"\n\nexport const GullLayouts = {\n  layout3: Layout3\n};\n","import moment from \"moment\";\n\nexport function debounce(func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) func.apply(context, args);\n  };\n}\n\nexport function isMobile() {\n  if (window) {\n    return window.matchMedia(`(max-width: 767px)`).matches;\n  }\n  return false;\n}\n\nexport function isMdScreen() {\n  if (window) {\n    return window.matchMedia(`(max-width: 1199px)`).matches;\n  }\n  return false;\n}\n\nfunction currentYPosition() {\n  if (!window) {\n    return;\n  }\n  // Firefox, Chrome, Opera, Safari\n  if (window.pageYOffset) return window.pageYOffset;\n  // Internet Explorer 6 - standards mode\n  if (document.documentElement && document.documentElement.scrollTop)\n    return document.documentElement.scrollTop;\n  // Internet Explorer 6, 7 and 8\n  if (document.body.scrollTop) return document.body.scrollTop;\n  return 0;\n}\n\nfunction elmYPosition(elm) {\n  var y = elm.offsetTop;\n  var node = elm;\n  while (node.offsetParent && node.offsetParent !== document.body) {\n    node = node.offsetParent;\n    y += node.offsetTop;\n  }\n  return y;\n}\n\nexport function scrollTo(scrollableElement, elmID) {\n  var elm = document.getElementById(elmID);\n  if (!elmID || !elm) {\n    return;\n  }\n  var startY = currentYPosition();\n  var stopY = elmYPosition(elm);\n  var distance = stopY > startY ? stopY - startY : startY - stopY;\n  if (distance < 100) {\n    scrollTo(0, stopY);\n    return;\n  }\n  var speed = Math.round(distance / 50);\n  if (speed >= 20) speed = 20;\n  var step = Math.round(distance / 25);\n  var leapY = stopY > startY ? startY + step : startY - step;\n  var timer = 0;\n  if (stopY > startY) {\n    for (var i = startY; i < stopY; i += step) {\n      setTimeout(\n        (function(leapY) {\n          return () => {\n            scrollableElement.scrollTo(0, leapY);\n          };\n        })(leapY),\n        timer * speed\n      );\n      leapY += step;\n      if (leapY > stopY) leapY = stopY;\n      timer++;\n    }\n    return;\n  }\n  for (let i = startY; i > stopY; i -= step) {\n    setTimeout(\n      (function(leapY) {\n        return () => {\n          scrollableElement.scrollTo(0, leapY);\n        };\n      })(leapY),\n      timer * speed\n    );\n    leapY -= step;\n    if (leapY < stopY) leapY = stopY;\n    timer++;\n  }\n  return false;\n}\n\nexport function getTimeDifference(date) {\n  let difference =\n    moment(new Date(), \"DD/MM/YYYY HH:mm:ss\").diff(\n      moment(date, \"DD/MM/YYYY HH:mm:ss\")\n    ) / 1000;\n\n  if (difference < 60) return `${Math.floor(difference)} seconds`;\n  else if (difference < 3600) return `${Math.floor(difference / 60)} minutes`;\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} hours`;\n  else if (difference < 86400 * 30)\n    return `${Math.floor(difference / 86400)} days`;\n  else if (difference < 86400 * 30 * 12)\n    return `${Math.floor(difference / 86400 / 30)} months`;\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} years`;\n}\n\nexport function generateRandomId() {\n  let tempId = Math.random().toString();\n  let uid = tempId.substr(2, tempId.length - 1);\n  return uid;\n}\n\nexport function getQueryParam(prop) {\n  var params = {};\n  var search = decodeURIComponent(\n    window.location.href.slice(window.location.href.indexOf(\"?\") + 1)\n  );\n  var definitions = search.split(\"&\");\n  definitions.forEach(function(val, key) {\n    var parts = val.split(\"=\", 2);\n    params[parts[0]] = parts[1];\n  });\n  return prop && prop in params ? params[prop] : params;\n}\n\nexport function classList(classes) {\n  return Object.entries(classes)\n    .filter(entry => entry[1])\n    .map(entry => entry[0])\n    .join(\" \");\n}\n\nexport function initCodeViewer() {\n  if(!document) return;\n  const pre = document.getElementsByTagName('pre');\n  if(!pre.length) return;\n  Array.prototype.map.call(pre, p => {\n    // console.log(p);\n    p.classList.add('collapsed');\n    p.addEventListener('click', (e) => {\n      console.log(e.target);\n      e.target.classList.remove('collapsed');\n    })\n  });\n\n  // pre.map(p => {\n  //   console.log(p)\n  // })\n  \n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { merge } from \"lodash\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { classList } from \"@utils\";\nimport ScrollBar from \"react-perfect-scrollbar\";\n\nclass Customizer extends Component {\n  state = {};\n\n  sidebarColors = [\n    {\n      name: \"gradient-purple-indigo\"\n    },\n    {\n      name: \"gradient-black-blue\"\n    },\n    {\n      name: \"gradient-black-gray\"\n    },\n    {\n      name: \"gradient-steel-gray\"\n    },\n    {\n      name: \"dark-purple\"\n    },\n    {\n      name: \"slate-gray\"\n    },\n    {\n      name: \"midnight-blue\"\n    },\n    {\n      name: \"blue\"\n    },\n    {\n      name: \"indigo\"\n    },\n    {\n      name: \"pink\"\n    },\n    {\n      name: \"red\"\n    },\n    {\n      name: \"purple\"\n    }\n  ];\n\n  handleLayoutChange = layoutName => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        activeLayout: layoutName\n      })\n    );\n  };\n\n  handleCustomizerToggle = () => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        customizer: {\n          open: !settings.customizer.open\n        }\n      })\n    );\n  };\n  handleDirectionChange = event => {\n    let { settings, setLayoutSettings } = this.props;\n    let dir = settings.dir === \"rtl\" ? \"ltr\" : \"rtl\";\n    document.documentElement.setAttribute(\"dir\", dir);\n    setLayoutSettings(\n      merge({}, settings, {\n        dir: dir\n      })\n    );\n  };\n  changeSidebarColor = colorClass => {\n    let { settings, setLayoutSettings } = this.props;\n    setLayoutSettings(\n      merge({}, settings, {\n        layout2Settings: {\n          leftSidebar: {\n            theme: colorClass\n          }\n        }\n      })\n    );\n  };\n\n  render() {\n    let { settings } = this.props;\n    let { activeLayout } = settings;\n\n    return (\n      <div\n        id=\"customizer\"\n        className={classList({\n          customizer: true,\n          open: settings.customizer.open\n        })}\n      >\n        <div className=\"handle\" onClick={this.handleCustomizerToggle}>\n          <i className=\"i-Gear spin\"></i>\n        </div>\n        <ScrollBar\n          className=\"customizer-body\"\n          data-perfect-scrollbar\n          data-suppress-scroll-x=\"true\"\n        >\n          <div className=\"accordion\" id=\"accordionCustomizer\">\n            <div className=\"card\">\n              <div className=\"card-header\" id=\"headingOne\">\n                <p className=\"mb-0\">Sidebar Layout</p>\n              </div>\n\n              <div\n                id=\"collapseOne\"\n                className=\"collapse show\"\n                aria-labelledby=\"headingThree\"\n                data-parent=\"#accordionCustomizer\"\n              >\n                <div className=\"card-body layouts\">\n                  <div\n                    className={classList({\n                      \"layout-box\": true,\n                      active: activeLayout === \"layout1\"\n                    })}\n                    onClick={() => this.handleLayoutChange(\"layout1\")}\n                  >\n                    <img\n                      src=\"/assets/images/screenshots/04_preview.png\"\n                      alt=\"\"\n                    />\n                    <i className=\"i-Eye\"> </i>\n                  </div>\n                  <div\n                    className={classList({\n                      \"layout-box\": true,\n                      active: activeLayout === \"layout2\"\n                    })}\n                    onClick={() => this.handleLayoutChange(\"layout2\")}\n                  >\n                    <img\n                      src=\"/assets/images/screenshots/02_preview.png\"\n                      alt=\"\"\n                    />\n                    <i className=\"i-Eye\"> </i>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {settings.activeLayout === \"layout2\" && (\n              <div className=\"card\">\n                <div className=\"card-header\" id=\"headingOne\">\n                  <p className=\"mb-0\">Sidebar Colors</p>\n                </div>\n\n                <div\n                  id=\"collapseOne\"\n                  className=\"collapse show\"\n                  aria-labelledby=\"headingOne\"\n                  data-parent=\"#accordionCustomizer\"\n                >\n                  <div className=\"card-body\">\n                    <div className=\"colors sidebar-colors\">\n                      {this.sidebarColors.map((c, i) => (\n                        <span\n                          className={`color ${c.name}`}\n                          title={c.name}\n                          onClick={() =>\n                            this.changeSidebarColor(`sidebar-${c.name}`)\n                          }\n                          key={i}\n                        >\n                          <i className=\"i-Eye\"></i>\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div className=\"card\">\n              <div className=\"card-header\" id=\"headingOne\">\n                <p className=\"mb-0\">RTL</p>\n              </div>\n\n              <div\n                id=\"collapseTwo\"\n                className=\"collapse show\"\n                aria-labelledby=\"headingTwo\"\n                data-parent=\"#accordionCustomizer\"\n              >\n                <div className=\"card-body\">\n                  <label className=\"checkbox checkbox-primary\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"rtl-checkbox\"\n                      checked={settings.dir === \"rtl\" ? true : false}\n                      onChange={this.handleDirectionChange}\n                    />\n                    <span>Enable RTL</span>\n                    <span className=\"checkmark\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            {/* <div className=\"card\">\n              <div className=\"card-header\" id=\"headingThree\">\n                <p className=\"mb-0\">Bootstrap Colors</p>\n              </div>\n\n              <div\n                id=\"collapseThree\"\n                className=\"collapse show\"\n                aria-labelledby=\"headingThree\"\n                data-parent=\"#accordionCustomizer\"\n              >\n                <div className=\"card-body\">\n                  <div className=\"bootstrap-colors colors\">\n                    <span title=\"lite-purple\" className=\"color purple\"></span>\n                    <span title=\"lite-blue\" className=\"color blue\"></span>\n                  </div>\n                </div>\n              </div>\n            </div> */}\n          </div>\n        </ScrollBar>\n      </div>\n    );\n  }\n}\n\nCustomizer.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default connect(mapStateToProps, {\n  setLayoutSettings,\n  setDefaultSettings\n})(Customizer);\n","import React, { Component, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport AppContext from \"app/appContext\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings,\n} from \"app/redux/actions/LayoutActions\";\n\nimport { GullLayouts } from \".\";\nimport Customizer from \"./SharedComponents/Customizer\";\n\nclass GullLayout extends Component {\n  state = {};\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n    }\n  }\n  componentDidMount() {\n    this.initAppDirection();\n  }\n\n  initAppDirection = () => {\n    let { settings } = this.props;\n    setTimeout(() => {\n      document.documentElement.setAttribute(\"dir\", settings.dir);\n    });\n  };\n\n  render() {\n    let { activeLayout, route, settings } = this.props;\n    let Layout = GullLayouts[activeLayout];\n    return (\n      <Suspense>\n        <React.Fragment>\n          <Layout routes={route.routes}></Layout>\n          {settings.customizer.show && <Customizer></Customizer>}\n        </React.Fragment>\n      </Suspense>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings,\n  activeLayout: state.layout.settings.activeLayout,\n  defaultSettings: state.layout.defaultSettings,\n});\n\nGullLayout.contextType = AppContext;\n\nexport default withRouter(\n  connect(mapStateToProps, { setLayoutSettings, setDefaultSettings })(\n    GullLayout\n  )\n);\n","import React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppContext from \"app/appContext\";\nimport GullLayout from \"app/GullLayout/GullLayout\";\nimport { flatMap } from \"lodash\";\nclass AuthGuard extends Component {\n  constructor(props, context) {\n    super(props);\n    let { routes } = context;\n\n    this.state = {\n      authenticated: true,\n      routes\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      routes: flatMap(this.state.routes, item => {\n        if (item.routes) {\n          return [...item.routes];\n        }\n        return [item];\n      })\n    });\n\n    if (!this.state.authenticated) {\n      this.redirectRoute(this.props);\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.authenticated) {\n      this.redirectRoute(this.props);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.authenticated !== this.state.authenticated;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { location, user } = props;\n    const { pathname } = location;\n    const matched = state.routes.find(r => r.path === pathname);\n    const authenticated =\n      matched && matched.auth && matched.auth.length\n        ? matched.auth.includes(user.role)\n        : true;\n    return {\n      authenticated\n    };\n  }\n\n  redirectRoute(props) {\n    const { location, history } = props;\n    const { pathname } = location;\n\n    history.push({\n      pathname: \"/session/signin\",\n      state: { redirectUrl: pathname }\n    });\n  }\n\n  render() {\n    let { route } = this.props;\n    const { authenticated } = this.state;\n\n    return authenticated ? (\n      <Fragment>\n        <GullLayout route={route}></GullLayout>\n      </Fragment>\n    ) : null;\n  }\n}\n\nAuthGuard.contextType = AppContext;\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(AuthGuard));\n","const InvoiceDetails = \"./InvoiceDetails\"\nconst InvoiceListTab = \"./InvoiceListWithTab\"\n\nconst invoiceRoutes = [\n  {\n    path: \"/invoice/list\",\n    component: InvoiceListTab\n  },\n  {\n    path: \"/invoice/:id\",\n    component: InvoiceDetails\n  }\n];\n\nexport default invoiceRoutes;\n","const CompanyDetails = \"./CompanyDetails\"\nconst CompanyList = \"./CompanyList\"\nconst companyRoutes = [\n  {\n    path: \"/company/list\",\n    component: CompanyList\n  },\n  {\n    path: \"/company/:id\",\n    component: CompanyDetails\n  }\n];\n\nexport default companyRoutes;\n","const PartyDetails = \"./PartyDetails\"\nconst PartyListTab = \"./PartyListMain\"\nconst partyRoutes = [\n  {\n    path: \"/party/list\",\n    component: PartyListTab\n  },\n  {\n    path: \"/party/:id\",\n    component: PartyDetails\n  }\n];\n\nexport default partyRoutes;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n// import sessionsRoutes from \"./views/sessions/sessionsRoutes\";\nimport AuthGuard from \"./auth/AuthGuard\";\nimport invoiceRoutes from \"./views/app/invoice/invoiceRoutes\";\nimport companyRoutes from \"./views/componentss/company/companyRoutes\"\nimport partyRoutes from \"./views/componentss/party/PartyRoutes\"\nconst redirectRoute = [\n  {\n    path: \"/\",\n    exact: true,\n    component: () => <Redirect to=\"/invoice/create\" />\n  }\n];\n\nconst errorRoute = [\n  {\n    component: () => <Redirect to=\"/session/404\" />\n  }\n];\n\nconst routes = [\n  // ...sessionsRoutes,\n  {\n    path: \"/\",\n    component: AuthGuard,\n    routes: [\n      ...invoiceRoutes,\n      ...companyRoutes,\n      ...partyRoutes,\n      ...redirectRoute,\n      ...errorRoute\n    ]\n  }\n];\n\nexport default routes;\n","class localStorageService {\n  ls = window.localStorage\n\n  setItem(key, value) {\n    value = JSON.stringify(value)\n    this.ls.setItem(key, value)\n    return true\n  }\n\n  getItem(key) {\n    let value = this.ls.getItem(key)\n    try {\n      return JSON.parse(value)\n    } catch (e) {\n      return null\n    }\n  }\n\n}\n\nexport default new localStorageService();","import axios from \"axios\"\nimport localStorageService from \"../app/services/localStorageService\";\nconst token = localStorageService.getItem('jwt_token')\naxios.defaults.xsrfCookieName = \"csrftoken\"\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\"\naxios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\nexport default axios.create({\n  baseURL: \"http://skrkmk.in/\",\n})\n","\nimport localStorageService from \"./localStorageService\";\nimport axios from \"../../axios/axios\"\nclass JwtAuthService {\n  \n  user = {\n    userId: \"1\",\n    role: 'ADMIN',\n    displayName: \"Watson Joyce\",\n    email: \"watsonjoyce@gmail.com\",\n    photoURL: \"/assets/images/face-7.jpg\",\n    age: 25,\n    token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\"\n  }\n  // loginWithRESTAPI = (email, password) => {\n  //   return new Promise((resolve,reject)=>{\n\n  //   })\n  // }\n\n  loginWithEmailAndPassword = (email, password) => {\n    return axios.post(\"/api/users/login/\",{user:{email:email,password:password}}).then(data => {\n      this.setSession(data.data.user.token);\n      this.setUser(data.data.user);\n      return data.data.user;\n    });\n  };\n\n  \n\n  logout = () => {\n    this.setSession(null);\n    this.removeUser();\n  }\n\n  setSession = token => {\n    if (token) {\n      localStorageService.setItem(\"jwt_token\", token);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    } else {\n      localStorage.removeItem(\"jwt_token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  };\n  setUser = (user) => {    \n    localStorageService.setItem(\"auth_user\", user);\n  }\n  removeUser = () => {\n    localStorage.removeItem(\"auth_user\");\n  }\n}\n\nexport default new JwtAuthService();\n","import history from \"@history.js\";\nimport jwtAuthService from \"../../services/jwtAuthService\";\n\nexport const SET_USER_DATA = \"USER_SET_DATA\";\nexport const REMOVE_USER_DATA = \"USER_REMOVE_DATA\";\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\n\nexport function setUserData(user) {\n  return dispatch => {\n    dispatch({\n      type: SET_USER_DATA,\n      data: user\n    });\n  };\n}\n\nexport function logoutUser() {\n  return dispatch => {\n    jwtAuthService.logout();\n\n    history.push({\n      pathname: \"/session/signin\"\n    });\n\n    dispatch({\n      type: USER_LOGGED_OUT\n    });\n  };\n}\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  LOGIN_LOADING,\n  RESET_PASSWORD\n} from \"../actions/LoginActions\";\n\nconst initialState = {\n  success: false,\n  loading: false,\n  error: {\n    username: null,\n    password: null\n  }\n};\n\nconst LoginReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_LOADING: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case LOGIN_SUCCESS: {\n      return {\n        ...state,\n        success: true,\n        loading: false\n      };\n    }\n    case RESET_PASSWORD: {\n      return {\n        ...state,\n        success: true,\n        loading: false\n      };\n    }\n    case LOGIN_ERROR: {\n      return {\n        success: false,\n        loading: false,\n        error: action.data\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default LoginReducer;\n","import jwtAuthService from \"../../services/jwtAuthService\";\nimport { setUserData } from \"./UserActions\";\nimport history from \"@history.js\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport function loginWithEmailAndPassword({ email, password }) {\n  return dispatch => {\n    dispatch({\n      type: LOGIN_LOADING\n    });\n\n    jwtAuthService\n      .loginWithEmailAndPassword(email, password)\n      .then(user => {\n        console.log(1)\n        dispatch(setUserData(user));\n        console.log(6)\n\n        history.push({\n          pathname: \"/\"\n        });\n\n        console.log(8)\n        return dispatch({\n          type: LOGIN_SUCCESS\n        });\n      })\n      .catch(error => {\n        return dispatch({\n          type: LOGIN_ERROR,\n          payload: error\n        });\n      });\n  };\n}\n\nexport function resetPassword({ email }) {\n  return dispatch => {\n    dispatch({\n      payload: email,\n      type: RESET_PASSWORD\n    });\n  };\n}","import {\n  SET_USER_DATA,\n  REMOVE_USER_DATA,\n  USER_LOGGED_OUT\n} from \"../actions/UserActions\";\n\nconst initialState = {};\n\nconst userReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER_DATA: {\n      console.log(4)\n      return {\n        ...state,\n        ...action.data\n      };\n    }\n    case REMOVE_USER_DATA: {\n      return {\n        ...state\n      };\n    }\n    case USER_LOGGED_OUT: {\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default userReducer;\n","import layout3Settings from \"./Layout3/Layout3Settings\";\n\nexport const GullLayoutSettings = {\n  activeLayout: \"layout3\",\n  dir: \"ltr\",\n  layout3Settings,\n  customizer: {\n    show: false,\n    open: false\n  },\n  footer: {\n    show: true\n  }\n};\n","const layout3Settings = {\n  leftSidebar: {\n    open: false,\n    mode: \"close\", // large, close, compact\n    theme: \"slateDark1\", // View all valid theme colors inside GullTheme/themeColors.js\n    bgOpacity: 0.96, // 0 ~ 1\n    bgImgURL: \"/assets/images/sidebar/sidebar-bg-dark.jpg\"\n  },\n  header: {\n    show: true,\n    fixed: false,\n    theme: \"slateDark1\" // View all valid theme colors inside GullTheme/themeColors.js\n  },\n  searchBox: {\n    open: false\n  },\n  secondarySidebar: { show: true },\n  footer: { show: false }\n};\n\nexport default layout3Settings;\n","import {\n  SET_LAYOUT_SETTINGS,\n  SET_DEFAULT_LAYOUT_SETTINGS\n} from \"../actions/LayoutActions\";\nimport { GullLayoutSettings } from \"../../GullLayout/settings\";\n\nconst initialState = {\n  settings: {\n    ...GullLayoutSettings\n  },\n  defaultSettings: {\n    ...GullLayoutSettings\n  }\n};\n\nconst LayoutReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LAYOUT_SETTINGS:\n      return {\n        ...state,\n        settings: { ...action.data }\n      };\n    case SET_DEFAULT_LAYOUT_SETTINGS:\n      return {\n        ...state,\n        defaultSettings: { ...action.data }\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default LayoutReducer;\n","import {\n  GET_ALL_BOARD,\n  ADD_BOARD,\n  GET_BOARD_BY_ID,\n  ADD_LIST,\n  RENAME_LIST,\n  DELETE_LIST,\n  ADD_CARD,\n  GET_ALL_MEMBERS,\n  GET_ALL_LABELS,\n  ADD_MEMBER_IN_BOARD,\n  DELETE_MEMBER_FROM_BOARD,\n  UPDATE_CARD,\n  MOVE_CARD,\n  REORDER_LIST,\n  REORDER_CARD_LIST\n} from \"../actions/ScrumBoardActions\";\n\nconst initialState = {};\n\nconst ScrumBoardReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_MEMBERS: {\n      return {\n        ...state,\n        memberList: [...action.payload]\n      };\n    }\n    case GET_ALL_LABELS: {\n      return {\n        ...state,\n        labelList: [...action.payload]\n      };\n    }\n    case GET_ALL_BOARD: {\n      return {\n        ...state,\n        boardList: [...action.payload]\n      };\n    }\n    case ADD_BOARD: {\n      return {\n        ...state,\n        boardList: [...action.payload]\n      };\n    }\n    case GET_BOARD_BY_ID: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case ADD_MEMBER_IN_BOARD: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case DELETE_MEMBER_FROM_BOARD: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case ADD_LIST: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case RENAME_LIST: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case DELETE_LIST: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case REORDER_LIST: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case ADD_CARD: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case UPDATE_CARD: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case REORDER_CARD_LIST: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    case MOVE_CARD: {\n      return {\n        ...state,\n        board: { ...action.payload }\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default ScrumBoardReducer;\n","import axios from \"axios\";\n\nexport const GET_ALL_BOARD = \"GET_ALL_BOARD\";\nexport const GET_BOARD_BY_ID = \"GET_BOARD_BY_ID\";\nexport const ADD_BOARD = \"ADD_BOARD\";\nexport const ADD_MEMBER_IN_BOARD = \"ADD_MEMBER_IN_BOARD\";\nexport const DELETE_MEMBER_FROM_BOARD = \"DELETE_MEMBER_FROM_BOARD\";\nexport const GET_ALL_MEMBERS = \"GET_ALL_MEMBERS\";\nexport const GET_ALL_LABELS = \"GET_ALL_LABELS\";\n\nexport const ADD_LIST = \"ADD_LIST\";\nexport const RENAME_LIST = \"RENAME_LIST\";\nexport const REORDER_LIST = \"REORDER_LIST\";\nexport const DELETE_LIST = \"DELETE_LIST\";\n\nexport const ADD_CARD = \"ADD_CARD\";\nexport const UPDATE_CARD = \"UPDATE_CARD\";\nexport const REORDER_CARD = \"REORDER_CARD\";\nexport const REORDER_CARD_LIST = \"REORDER_CARD_LIST\";\nexport const MOVE_CARD = \"MOVE_CARD\";\nexport const DELETE_CARD = \"DELETE_CARD\";\n\nexport const getAllMembers = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-member\").then(res => {\n      dispatch({\n        type: GET_ALL_MEMBERS,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const getAllLabels = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-label\").then(res => {\n      dispatch({\n        type: GET_ALL_LABELS,\n        payload: res.data\n      });\n    });\n  };\n};\n\n// BOARD RELATED ACTIONS\nexport const getAllBoard = () => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board/all-board\").then(res => {\n      dispatch({\n        type: GET_ALL_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const addNewBoard = boardTitle => {\n  return dispatch => {\n    axios.post(\"/api/scrum-board/add-board\", boardTitle).then(res => {\n      dispatch({\n        type: ADD_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const getBoardById = id => {\n  return dispatch => {\n    axios.get(\"/api/scrum-board\", { data: id }).then(res => {\n      dispatch({\n        type: GET_BOARD_BY_ID,\n        payload: res.data\n      });\n    });\n  };\n};\n\nexport const addMemberInBoard = ({ boardId, memberId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-member\", { boardId, memberId })\n      .then(res => {\n        dispatch({\n          type: ADD_MEMBER_IN_BOARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const deleteMemberFromBoard = ({ boardId, memberId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/delete-member\", { boardId, memberId })\n      .then(res => {\n        dispatch({\n          type: DELETE_MEMBER_FROM_BOARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const addListInBoard = ({ boardId, listTitle }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-column\", { boardId, listTitle })\n      .then(res => {\n        dispatch({\n          type: ADD_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const renameListInBoard = ({ boardId, listTitle, listId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/rename-column\", { boardId, listTitle, listId })\n      .then(res => {\n        dispatch({\n          type: RENAME_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const reorderList = (boardId, startIndex, endIndex) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/reorder-list\", { boardId, startIndex, endIndex })\n      .then(res => {\n        dispatch({\n          type: REORDER_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const deleteListFromBoard = ({ boardId, listId }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/delete-column\", { boardId, listId })\n      .then(res => {\n        dispatch({\n          type: DELETE_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const addNewCardInList = ({ listId, boardId, cardTitle }) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/add-card\", { listId, boardId, cardTitle })\n      .then(res => {\n        dispatch({\n          type: ADD_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/reorder-card\", {\n        boardId,\n        listId,\n        startIndex,\n        endIndex\n      })\n      .then(res => {\n        dispatch({\n          type: REORDER_CARD_LIST,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const moveCardInList = (\n  boardId,\n  sourcelistId,\n  destinationlistId,\n  source,\n  destination\n) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/move-card\", {\n        boardId,\n        sourcelistId,\n        destinationlistId,\n        source,\n        destination\n      })\n      .then(res => {\n        dispatch({\n          type: MOVE_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n\nexport const updateCardInList = (boardId, listId, card) => {\n  return dispatch => {\n    axios\n      .post(\"/api/scrum-board/update-card\", { boardId, listId, card })\n      .then(res => {\n        dispatch({\n          type: UPDATE_CARD,\n          payload: res.data\n        });\n      });\n  };\n};\n","import {\n  GET_NOTIFICATION,\n  CREATE_NOTIFICATION,\n  DELETE_ALL_NOTIFICATION,\n  DELETE_NOTIFICATION\n} from \"../actions/NotificationActions\";\n\nconst initialState = [];\n\nconst NotificationReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case GET_NOTIFICATION: {\n      return [...action.payload];\n    }\n    case CREATE_NOTIFICATION: {\n      return [...action.payload];\n    }\n    case DELETE_NOTIFICATION: {\n      return [...action.payload];\n    }\n    case DELETE_ALL_NOTIFICATION: {\n      return [...action.payload];\n    }\n    default: {\n      return [...state];\n    }\n  }\n};\n\nexport default NotificationReducer;\n","import axios from \"axios\";\n\nexport const GET_NOTIFICATION = \"GET_NOTIFICATION\";\nexport const CREATE_NOTIFICATION = \"CREATE_NOTIFICATION\";\nexport const DELETE_NOTIFICATION = \"DELETE_NOTIFICATION\";\nexport const DELETE_ALL_NOTIFICATION = \"DELETE_ALL_NOTIFICATION\";\n\nexport const getNotification = () => dispatch => {\n  axios.get(\"/api/notification\").then(res => {\n    dispatch({\n      type: GET_NOTIFICATION,\n      payload: res.data\n    });\n  });\n};\n\nexport const deleteNotification = id => dispatch => {\n  axios.post(\"/api/notification/delete\", { id }).then(res => {\n    dispatch({\n      type: DELETE_NOTIFICATION,\n      payload: res.data\n    });\n  });\n};\n\nexport const deleteAllNotification = () => dispatch => {\n  axios.post(\"/api/notification/delete-all\").then(res => {\n    dispatch({\n      type: DELETE_ALL_NOTIFICATION,\n      payload: res.data\n    });\n  });\n};\n\nexport const createNotification = notification => dispatch => {\n  axios.post(\"/api/notification/add\", { notification }).then(res => {\n    dispatch({\n      type: CREATE_NOTIFICATION,\n      payload: res.data\n    });\n  });\n};\n","import {\n  GET_PRODUCT_LIST,\n  GET_CART_LIST,\n  ADD_PRODUCT_TO_CART,\n  DELETE_PRODUCT_FROM_CART,\n  UPDATE_CART_AMOUNT,\n  GET_CATEGORY_LIST,\n  GET_RATING_LIST,\n  GET_BRAND_LIST\n} from \"../actions/EcommerceActions\";\n\nconst initialState = {\n  productList: [],\n  cartList: []\n};\n\nconst EcommerceReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PRODUCT_LIST: {\n      return {\n        ...state,\n        productList: [...action.payload]\n      };\n    }\n    case GET_CATEGORY_LIST: {\n      return {\n        ...state,\n        categoryList: [...action.payload]\n      };\n    }\n    case GET_RATING_LIST: {\n      return {\n        ...state,\n        ratingList: [...action.payload]\n      };\n    }\n    case GET_BRAND_LIST: {\n      return {\n        ...state,\n        brandList: [...action.payload]\n      };\n    }\n    case GET_CART_LIST: {\n      return {\n        ...state,\n        cartList: [...action.payload]\n      };\n    }\n    case ADD_PRODUCT_TO_CART: {\n      return {\n        ...state,\n        cartList: [...action.payload]\n      };\n    }\n    case DELETE_PRODUCT_FROM_CART: {\n      return {\n        ...state,\n        cartList: [...action.payload]\n      };\n    }\n    case UPDATE_CART_AMOUNT: {\n      return {\n        ...state,\n        cartList: [...action.payload]\n      };\n    }\n    default: {\n      return {\n        ...state\n      };\n    }\n  }\n};\n\nexport default EcommerceReducer;\n","import axios from \"axios\";\n\nexport const GET_PRODUCT_LIST = \"GET_PRODUCT_LIST\";\nexport const GET_CART_LIST = \"GET_CART_LIST\";\nexport const GET_CATEGORY_LIST = \"GET_CATEGORY_LIST\";\nexport const GET_RATING_LIST = \"GET_RATING_LIST\";\nexport const GET_BRAND_LIST = \"GET_BRAND_LIST\";\n\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\nexport const DELETE_PRODUCT_FROM_CART = \"DELETE_PRODUCT_FROM_CART\";\n\nexport const UPDATE_CART_AMOUNT = \"UPDATE_CART_AMOUNT\";\n\nexport const getProductList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-product-list\").then(res => {\n    console.log(\"1\",res.data)\n    dispatch({\n      type: GET_PRODUCT_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getCategoryList = () => dispatch => {\n  axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res => {\n    dispatch({\n      type: GET_CATEGORY_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getRatingList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-rating-list\").then(res => {\n    dispatch({\n      type: GET_RATING_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getBrandList = () => dispatch => {\n  axios.get(\"/api/ecommerce/get-brand-list\").then(res => {\n    dispatch({\n      type: GET_BRAND_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const getCartList = uid => dispatch => {\n  axios.get(\"/api/ecommerce/get-cart-list\", { data: uid }).then(res => {\n    dispatch({\n      type: GET_CART_LIST,\n      payload: res.data\n    });\n  });\n};\n\nexport const addProductToCart = (uid, productId) => dispatch => {\n  axios.post(\"/api/ecommerce/add-to-cart\", { uid, productId }).then(res => {\n    dispatch({\n      type: ADD_PRODUCT_TO_CART,\n      payload: res.data\n    });\n  });\n};\n\nexport const deleteProductFromCart = (uid, productId) => dispatch => {\n  axios\n    .post(\"/api/ecommerce/delete-from-cart\", { uid, productId })\n    .then(res => {\n      dispatch({\n        type: DELETE_PRODUCT_FROM_CART,\n        payload: res.data\n      });\n    });\n};\n\nexport const updateCartAmount = (uid, productId, amount) => dispatch => {\n  axios\n    .post(\"/api/ecommerce/update-cart-amount\", { uid, productId, amount })\n    .then(res => {\n      dispatch({\n        type: UPDATE_CART_AMOUNT,\n        payload: res.data\n      });\n    });\n};\n","import { combineReducers } from \"redux\";\nimport LoginReducer from \"./LoginReducer\";\nimport UserReducer from \"./UserReducer\";\nimport LayoutReducer from \"./LayoutReducer\";\nimport ScrumBoardReducer from \"./ScrumBoardReducer\";\nimport NotificationReducer from \"./NotificationReducer\";\nimport EcommerceReducer from \"./EcommerceReducer\";\n\nconst RootReducer = combineReducers({\n  login: LoginReducer,\n  user: UserReducer,\n  layout: LayoutReducer,\n  scrumboard: ScrumBoardReducer,\n  notification: NotificationReducer,\n  ecommerce: EcommerceReducer\n});\n\nexport default RootReducer;\n","import thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport RootReducer from \"./reducers/RootReducer\";\n\nconst initialState = {};\n\nconst middlewares = [thunk];\nlet devtools = x => x;\n\nif (\n  process.env.NODE_ENV !== \"production\" &&\n  process.browser &&\n  window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\n}\n\nexport const Store = createStore(\n  RootReducer,\n  initialState,\n  compose(applyMiddleware(...middlewares), devtools)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\n\nclass Auth extends Component {\n  state = {};\n\n  constructor(props) {\n    super(props);\n    this.props.setUserData(localStorageService.getItem(\"auth_user\"));\n  }\n\n  checkJwtAuth = () => {\n    jwtAuthService.loginWithEmailAndPassword().then(user => {\n      this.props.setUserData(user);\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  setUserData: PropTypes.func.isRequired,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, { setUserData })(Auth);\n","import React, { Component } from \"react\";\nimport { classList } from \"@utils\";\n\nclass DropDownMenuItem extends Component {\n  state = {\n    collapsed: true\n  };\n  elementRef = React.createRef();\n\n  componentHeight = 0;\n  calcaulateHeight(node) {\n    if (node.name !== \"child\") {\n      for (let child of node.children) {\n        this.calcaulateHeight(child);\n      }\n    }\n    this.componentHeight += node.clientHeight;\n    return;\n  }\n  componentDidMount() {\n    this.calcaulateHeight(this.elementRef);\n\n    // OPEN DROPDOWN IF CHILD IS ACTIVE\n    // let { location } = this.props;\n    // for (let child of this.elementRef.children) {\n    //   if (child.getAttribute(\"href\") === location.pathname) {\n    //     this.setState({ collapsed: false });\n    //   }\n    // }\n  }\n  onItemClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  render() {\n    let { collapsed } = this.state;\n    let { children } = this.props;\n    let { name, icon } = this.props.item;\n\n    return (\n      <li\n        className={classList({\n          \"nav-item dropdown-sidemenu\": true,\n          open: !collapsed\n        })}\n      >\n        <div onClick={this.onItemClick}>\n          <i className={`nav-icon ${icon}`}></i>\n          <span className=\"item-name\">{name}</span>\n          <i className=\"dd-arrow i-Arrow-Down\"></i>\n        </div>\n\n        <ul\n          className=\"submenu\"\n          ref={el => (this.elementRef = el)}\n          style={\n            collapsed\n              ? { maxHeight: \"0px\" }\n              : { maxHeight: this.componentHeight + \"px\" }\n          }\n        >\n          {children}\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default DropDownMenuItem;\n","import React from \"react\";\n\nconst styles = {\n  position: \"fixed\",\n  left: 0,\n  right: 0,\n  top: \"calc(50% - 20px)\",\n  margin: \"auto\",\n  height: \"40px\",\n  width: \"40px\",\n  zIndex: 324324324\n};\n\nconst Loading = () => {\n  return (\n    <div style={styles}>\n      <div className=\"spinner spinner-bubble spinner-bubble-primary\"></div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { classList } from \"@utils\";\nimport DropDownMenuItem from \"./DropDownMenuItem\";\n\nclass DropDownMenu extends Component {\n  state = {\n    open: false,\n  };\n\n  onItemClick = (e) => {\n    e.preventDefault();\n    this.setState({ open: !this.state.open });\n  };\n\n  renderLevels = (items) =>\n    items.map((item, i) => {\n      if (item.sub) {\n        return (\n          <DropDownMenuItem key={i} item={item}>\n            {this.renderLevels(item.sub)}\n          </DropDownMenuItem>\n        );\n      } else {\n        return (\n          <li\n            key={i}\n            className={classList({\n              \"nav-item\": true,\n              open: this.state.open,\n            })}\n            onClick={this.props.closeSecSidenav}\n          >\n            <NavLink activeClassName=\"selected\" exact to={item.path}>\n              <i className={`nav-icon ${item.icon}`}></i>\n              <span className=\"item-name\">{item.name}</span>\n            </NavLink>\n          </li>\n        );\n      }\n    });\n\n  render() {\n    return <ul className=\"childNav\">{this.renderLevels(this.props.menu)}</ul>;\n  }\n}\n\nexport default DropDownMenu;\n","import React, { Suspense } from \"react\";\nimport \"../styles/app/app.scss\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport AppContext from \"./appContext\";\nimport history from \"@history\";\nimport routes from \"./RootRoutes\";\nimport { Store } from \"./redux/Store\";\nimport { renderRoutes } from \"react-router-config\";\nimport Auth from \"./auth/Auth\";\nimport RootRoutes from \"./RootRoutes\";\nimport { Loading } from \"@gull\";\n\nfunction App() {\n  return (\n    <AppContext.Provider value={{ routes }}>\n      <Provider store={Store}>\n        <Auth>\n          <Suspense fallback={<Loading></Loading>}>\n            <Router history={history}>{renderRoutes(RootRoutes)}</Router>\n          </Suspense>\n        </Auth>\n      </Provider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}